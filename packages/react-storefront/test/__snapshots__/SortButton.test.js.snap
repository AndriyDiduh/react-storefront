// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SortButton passes drawerProps to the underlying Drawer component 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-SortButton-with-app title="Sort By" model={{...}} drawerProps={{...}}>
        <SortButton title="Sort By" model={{...}} drawerProps={{...}} app={{...}} variant="drawer" sortProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]}>
            <ActionButton href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-230 MuiButton-contained-241 MuiButton-raised-244 RSFActionButton-raised-226" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-249" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-230 MuiButton-contained-241 MuiButton-raised-244 RSFActionButton-raised-226" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-249" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-256 MuiButton-root-230 MuiButton-contained-241 MuiButton-raised-244 RSFActionButton-raised-226" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-231 RSFActionButton-label-227">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-228">
                            <Typography variant="button" className="RSFActionButton-caption-228" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-259 MuiTypography-button-270 RSFActionButton-caption-228">
                                Sort By
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-229">
                            <Typography variant="caption" className="RSFActionButton-value-229" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-259 MuiTypography-caption-269 RSFActionButton-value-229">
                                Price - Low to High
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-294" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-294" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`SortButton passes sortProps to the underlying Sort component 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-SortButton-with-app title="Sort By" model={{...}} sortProps={{...}}>
        <SortButton title="Sort By" model={{...}} sortProps={{...}} app={{...}} variant="drawer" drawerProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]}>
            <ActionButton href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-305 MuiButton-contained-316 MuiButton-raised-319 RSFActionButton-raised-301" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-324" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-305 MuiButton-contained-316 MuiButton-raised-319 RSFActionButton-raised-301" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-324" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-331 MuiButton-root-305 MuiButton-contained-316 MuiButton-raised-319 RSFActionButton-raised-301" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-306 RSFActionButton-label-302">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-303">
                            <Typography variant="button" className="RSFActionButton-caption-303" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-334 MuiTypography-button-345 RSFActionButton-caption-303">
                                Sort By
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-304">
                            <Typography variant="caption" className="RSFActionButton-value-304" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-334 MuiTypography-caption-344 RSFActionButton-value-304">
                                Price - Low to High
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-369" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-369" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`SortButton renders with a sort selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-SortButton-with-app model={{...}}>
        <SortButton model={{...}} app={{...}} title="Sort" variant="drawer" drawerProps={{...}} sortProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort" value="Price - Low to High" onClick={[Function]}>
            <ActionButton href={{...}} label="Sort" value="Price - Low to High" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-80 MuiButton-contained-91 MuiButton-raised-94 RSFActionButton-raised-76" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-99" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-80 MuiButton-contained-91 MuiButton-raised-94 RSFActionButton-raised-76" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-99" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-106 MuiButton-root-80 MuiButton-contained-91 MuiButton-raised-94 RSFActionButton-raised-76" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-81 RSFActionButton-label-77">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-78">
                            <Typography variant="button" className="RSFActionButton-caption-78" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-109 MuiTypography-button-120 RSFActionButton-caption-78">
                                Sort
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-79">
                            <Typography variant="caption" className="RSFActionButton-value-79" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-109 MuiTypography-caption-119 RSFActionButton-value-79">
                                Price - Low to High
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-144" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-144" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`SortButton renders with no sort selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-SortButton-with-app model={{...}}>
        <SortButton model={{...}} app={{...}} title="Sort" variant="drawer" drawerProps={{...}} sortProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort" value={[undefined]} onClick={[Function]}>
            <ActionButton href={{...}} label="Sort" value={[undefined]} onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 RSFActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 RSFActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 RSFActionButton-raised-1" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-6 RSFActionButton-label-2">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-3">
                            <Typography variant="button" className="RSFActionButton-caption-3" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-34 MuiTypography-button-45 RSFActionButton-caption-3">
                                Sort
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-4">
                            <Typography variant="caption" className="RSFActionButton-value-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-34 MuiTypography-caption-44 RSFActionButton-value-4" />
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-69" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-69" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`SortButton uses the title prop as the label and drawer header 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-SortButton-with-app title="Sort By" model={{...}}>
        <SortButton title="Sort By" model={{...}} app={{...}} variant="drawer" drawerProps={{...}} sortProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]}>
            <ActionButton href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-155 MuiButton-contained-166 MuiButton-raised-169 RSFActionButton-raised-151" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-174" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-155 MuiButton-contained-166 MuiButton-raised-169 RSFActionButton-raised-151" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-174" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-181 MuiButton-root-155 MuiButton-contained-166 MuiButton-raised-169 RSFActionButton-raised-151" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-156 RSFActionButton-label-152">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-153">
                            <Typography variant="button" className="RSFActionButton-caption-153" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-184 MuiTypography-button-195 RSFActionButton-caption-153">
                                Sort By
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-154">
                            <Typography variant="caption" className="RSFActionButton-value-154" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-184 MuiTypography-caption-194 RSFActionButton-value-154">
                                Price - Low to High
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-219" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-219" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
