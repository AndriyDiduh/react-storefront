// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu custom renderers itemContentRenderer should be called for each item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemContentRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemContentRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemContentRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemContentRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-1059 MuiDrawer-modal-1070 RSFMenu-modal-1057" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-1059 MuiDrawer-modal-1070 RSFMenu-modal-1057" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-1071 MuiDrawer-root-1059 MuiDrawer-modal-1070 RSFMenu-modal-1057 MuiModal-hidden-1072">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-1074" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-1061 RSFMenu-drawer-1035 MuiDrawer-paperAnchorLeft-1062" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-1061 RSFMenu-drawer-1035 MuiDrawer-paperAnchorLeft-1062" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-1076 MuiPaper-elevation16-1094 MuiDrawer-paper-1061 RSFMenu-drawer-1035 MuiDrawer-paperAnchorLeft-1062" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-1103 MuiList-padding-1104 RSFMenu-list-1036">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>rsfMenu.sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-expander-1053 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1109">
                                                                        <ButtonBase className="MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-expander-1053 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1109" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-1119 MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-expander-1053 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <div>
                                                                                  Group 1
                                                                                </div>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1126" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-1126" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-1122" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-1124">
                                                                        <div className="MuiCollapse-wrapperInner-1125">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-1103 RSFMenu-list-1036 MuiList-padding-1104">
                                                                                <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>rsfMenu.sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-expander-1053 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1109">
                                                                                                  <ButtonBase className="MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-expander-1053 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1109" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-1119 MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-expander-1053 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <div>
                                                                                                            Item 1
                                                                                                          </div>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1126" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-1126" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-1122" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-1124">
                                                                                                  <div className="MuiCollapse-wrapperInner-1125">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-1103 RSFMenu-list-1036 MuiList-padding-1104">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-1050" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-1050" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-1050" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-1073 RSFMenu-link-1050" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-leaf-1054 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1109">
                                                                                                                                  <ButtonBase className="MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-leaf-1054 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1109" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-1119 MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-leaf-1054 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <div>
                                                                                                                                            Child 1
                                                                                                                                          </div>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1126" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-1126" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Leaf expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-1050" server={false} state={{...}} onClick={[Function]}>
                                                                <inject-Link to="/leaf" className="RSFMenu-link-1050" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                  <Link to="/leaf" className="RSFMenu-link-1050" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                                                                    <a data-moov-link="on" className="RSFLink-root-1073 RSFMenu-link-1050" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                      <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                        <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-leaf-1054 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1109">
                                                                              <ButtonBase className="MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-leaf-1054 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1109" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                <div className="MuiButtonBase-root-1119 MuiListItem-root-1107 RSFMenu-listItem-1049 RSFMenu-leaf-1054 MuiListItem-default-1110 MuiListItem-gutters-1115 MuiListItem-divider-1114 MuiListItem-button-1116" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                    <ItemContent expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                      <div>
                                                                                        Leaf
                                                                                      </div>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1126" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-1126" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </div>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </a>
                                                                  </Link>
                                                                </inject-Link>
                                                              </WithStyles(inject-Link)>
                                                            </Leaf>
                                                          </inject-Leaf-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                          <a data-moov-link="on" className="RSFLink-root-1073" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-1073" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-1073" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-1073" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu custom renderers itemRenderer should be called for each item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-873 MuiDrawer-modal-884 RSFMenu-modal-871" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-873 MuiDrawer-modal-884 RSFMenu-modal-871" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-885 MuiDrawer-root-873 MuiDrawer-modal-884 RSFMenu-modal-871 MuiModal-hidden-886">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-888" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-875 RSFMenu-drawer-849 MuiDrawer-paperAnchorLeft-876" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-875 RSFMenu-drawer-849 MuiDrawer-paperAnchorLeft-876" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-890 MuiPaper-elevation16-908 MuiDrawer-paper-875 RSFMenu-drawer-849 MuiDrawer-paperAnchorLeft-876" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-917 MuiList-padding-918 RSFMenu-list-850">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <div>
                                                            Group 1
                                                          </div>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <div>
                                                            Leaf
                                                          </div>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                          <a data-moov-link="on" className="RSFLink-root-887" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-887" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-887" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-887" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu custom renderers itemRenderer should render the default when null is returned 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-945 MuiDrawer-modal-956 RSFMenu-modal-943" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-945 MuiDrawer-modal-956 RSFMenu-modal-943" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-957 MuiDrawer-root-945 MuiDrawer-modal-956 RSFMenu-modal-943 MuiModal-hidden-958">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-960" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-947 RSFMenu-drawer-921 MuiDrawer-paperAnchorLeft-948" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-947 RSFMenu-drawer-921 MuiDrawer-paperAnchorLeft-948" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-962 MuiPaper-elevation16-980 MuiDrawer-paper-947 RSFMenu-drawer-921 MuiDrawer-paperAnchorLeft-948" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-989 MuiList-padding-990 RSFMenu-list-922">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>rsfMenu.sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-expander-939 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-995">
                                                                        <ButtonBase className="MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-expander-939 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-995" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-1005 MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-expander-939 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <WithStyles(ListItemText) className="RSFMenu-listItem-935" primary="Group 1" disableTypography={true}>
                                                                                  <ListItemText className="RSFMenu-listItem-935" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                    <div className="MuiListItemText-root-1008 RSFMenu-listItem-935">
                                                                                      Group 1
                                                                                    </div>
                                                                                  </ListItemText>
                                                                                </WithStyles(ListItemText)>
                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-938">
                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-938" classes={{...}}>
                                                                                    <div className="MuiListItemIcon-root-1014 RSFMenu-listItemIcon-938">
                                                                                      <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                        <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-930">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-930">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-930">
                                                                                                <SvgIcon className="RSFMenu-icon-930" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-1015 RSFMenu-icon-930" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </ExpanderIcon>
                                                                                      </inject-ExpanderIcon-with-app>
                                                                                    </div>
                                                                                  </ListItemIcon>
                                                                                </WithStyles(ListItemIcon)>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1028" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-1028" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-1024" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-1026">
                                                                        <div className="MuiCollapse-wrapperInner-1027">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-989 RSFMenu-list-922 MuiList-padding-990">
                                                                                <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>rsfMenu.sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-expander-939 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-995">
                                                                                                  <ButtonBase className="MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-expander-939 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-995" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-1005 MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-expander-939 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <WithStyles(ListItemText) className="RSFMenu-listItem-935" primary="Item 1" disableTypography={true}>
                                                                                                            <ListItemText className="RSFMenu-listItem-935" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                              <div className="MuiListItemText-root-1008 RSFMenu-listItem-935">
                                                                                                                Item 1
                                                                                                              </div>
                                                                                                            </ListItemText>
                                                                                                          </WithStyles(ListItemText)>
                                                                                                          <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-938">
                                                                                                            <ListItemIcon className="RSFMenu-listItemIcon-938" classes={{...}}>
                                                                                                              <div className="MuiListItemIcon-root-1014 RSFMenu-listItemIcon-938">
                                                                                                                <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                    <pure(ExpandMoreIcon) className="RSFMenu-icon-930">
                                                                                                                      <ExpandMoreIcon className="RSFMenu-icon-930">
                                                                                                                        <WithStyles(SvgIcon) className="RSFMenu-icon-930">
                                                                                                                          <SvgIcon className="RSFMenu-icon-930" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                            <svg className="MuiSvgIcon-root-1015 RSFMenu-icon-930" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                              <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                              <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                            </svg>
                                                                                                                          </SvgIcon>
                                                                                                                        </WithStyles(SvgIcon)>
                                                                                                                      </ExpandMoreIcon>
                                                                                                                    </pure(ExpandMoreIcon)>
                                                                                                                  </ExpanderIcon>
                                                                                                                </inject-ExpanderIcon-with-app>
                                                                                                              </div>
                                                                                                            </ListItemIcon>
                                                                                                          </WithStyles(ListItemIcon)>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1028" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-1028" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-1024" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-1026">
                                                                                                  <div className="MuiCollapse-wrapperInner-1027">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-989 RSFMenu-list-922 MuiList-padding-990">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-936" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-936" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-936" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-959 RSFMenu-link-936" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-leaf-940 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-995">
                                                                                                                                  <ButtonBase className="MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-leaf-940 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-995" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-1005 MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-leaf-940 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                            <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                              <div className="MuiListItemText-root-1008">
                                                                                                                                                Child 1
                                                                                                                                              </div>
                                                                                                                                            </ListItemText>
                                                                                                                                          </WithStyles(ListItemText)>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1028" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-1028" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Leaf expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-936" server={false} state={{...}} onClick={[Function]}>
                                                                <inject-Link to="/leaf" className="RSFMenu-link-936" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                  <Link to="/leaf" className="RSFMenu-link-936" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                                                                    <a data-moov-link="on" className="RSFLink-root-959 RSFMenu-link-936" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                      <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                        <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-leaf-940 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-995">
                                                                              <ButtonBase className="MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-leaf-940 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-995" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                <div className="MuiButtonBase-root-1005 MuiListItem-root-993 RSFMenu-listItem-935 RSFMenu-leaf-940 MuiListItem-default-996 MuiListItem-gutters-1001 MuiListItem-divider-1000 MuiListItem-button-1002" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                    <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                      <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                                        <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-1008">
                                                                                            Leaf
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1028" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-1028" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </div>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </a>
                                                                  </Link>
                                                                </inject-Link>
                                                              </WithStyles(inject-Link)>
                                                            </Leaf>
                                                          </inject-Leaf-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                          <a data-moov-link="on" className="RSFLink-root-959" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-959" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-959" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-959" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should be able to render leaf as a top level item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-759 MuiDrawer-modal-770 RSFMenu-modal-757" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-759 MuiDrawer-modal-770 RSFMenu-modal-757" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-771 MuiDrawer-root-759 MuiDrawer-modal-770 RSFMenu-modal-757 MuiModal-hidden-772">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-774" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-761 RSFMenu-drawer-735 MuiDrawer-paperAnchorLeft-762" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-761 RSFMenu-drawer-735 MuiDrawer-paperAnchorLeft-762" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-776 MuiPaper-elevation16-794 MuiDrawer-paper-761 RSFMenu-drawer-735 MuiDrawer-paperAnchorLeft-762" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-803 MuiList-padding-804 RSFMenu-list-736">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>rsfMenu.sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-expander-753 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-809">
                                                                        <ButtonBase className="MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-expander-753 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-809" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-819 MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-expander-753 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <WithStyles(ListItemText) className="RSFMenu-listItem-749" primary="Group 1" disableTypography={true}>
                                                                                  <ListItemText className="RSFMenu-listItem-749" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                    <div className="MuiListItemText-root-822 RSFMenu-listItem-749">
                                                                                      Group 1
                                                                                    </div>
                                                                                  </ListItemText>
                                                                                </WithStyles(ListItemText)>
                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-752">
                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-752" classes={{...}}>
                                                                                    <div className="MuiListItemIcon-root-828 RSFMenu-listItemIcon-752">
                                                                                      <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                        <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-744">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-744">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-744">
                                                                                                <SvgIcon className="RSFMenu-icon-744" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-829 RSFMenu-icon-744" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </ExpanderIcon>
                                                                                      </inject-ExpanderIcon-with-app>
                                                                                    </div>
                                                                                  </ListItemIcon>
                                                                                </WithStyles(ListItemIcon)>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-842" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-842" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-838" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-840">
                                                                        <div className="MuiCollapse-wrapperInner-841">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-803 RSFMenu-list-736 MuiList-padding-804">
                                                                                <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>rsfMenu.sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-expander-753 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-809">
                                                                                                  <ButtonBase className="MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-expander-753 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-809" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-819 MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-expander-753 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <WithStyles(ListItemText) className="RSFMenu-listItem-749" primary="Item 1" disableTypography={true}>
                                                                                                            <ListItemText className="RSFMenu-listItem-749" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                              <div className="MuiListItemText-root-822 RSFMenu-listItem-749">
                                                                                                                Item 1
                                                                                                              </div>
                                                                                                            </ListItemText>
                                                                                                          </WithStyles(ListItemText)>
                                                                                                          <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-752">
                                                                                                            <ListItemIcon className="RSFMenu-listItemIcon-752" classes={{...}}>
                                                                                                              <div className="MuiListItemIcon-root-828 RSFMenu-listItemIcon-752">
                                                                                                                <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                    <pure(ExpandMoreIcon) className="RSFMenu-icon-744">
                                                                                                                      <ExpandMoreIcon className="RSFMenu-icon-744">
                                                                                                                        <WithStyles(SvgIcon) className="RSFMenu-icon-744">
                                                                                                                          <SvgIcon className="RSFMenu-icon-744" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                            <svg className="MuiSvgIcon-root-829 RSFMenu-icon-744" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                              <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                              <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                            </svg>
                                                                                                                          </SvgIcon>
                                                                                                                        </WithStyles(SvgIcon)>
                                                                                                                      </ExpandMoreIcon>
                                                                                                                    </pure(ExpandMoreIcon)>
                                                                                                                  </ExpanderIcon>
                                                                                                                </inject-ExpanderIcon-with-app>
                                                                                                              </div>
                                                                                                            </ListItemIcon>
                                                                                                          </WithStyles(ListItemIcon)>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-842" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-842" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-838" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-840">
                                                                                                  <div className="MuiCollapse-wrapperInner-841">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-803 RSFMenu-list-736 MuiList-padding-804">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-750" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-750" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-750" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-773 RSFMenu-link-750" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-leaf-754 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-809">
                                                                                                                                  <ButtonBase className="MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-leaf-754 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-809" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-819 MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-leaf-754 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                            <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                              <div className="MuiListItemText-root-822">
                                                                                                                                                Child 1
                                                                                                                                              </div>
                                                                                                                                            </ListItemText>
                                                                                                                                          </WithStyles(ListItemText)>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-842" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-842" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Leaf expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-750" server={false} state={{...}} onClick={[Function]}>
                                                                <inject-Link to="/leaf" className="RSFMenu-link-750" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                  <Link to="/leaf" className="RSFMenu-link-750" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                                                                    <a data-moov-link="on" className="RSFLink-root-773 RSFMenu-link-750" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                      <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                        <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-leaf-754 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-809">
                                                                              <ButtonBase className="MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-leaf-754 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-809" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                <div className="MuiButtonBase-root-819 MuiListItem-root-807 RSFMenu-listItem-749 RSFMenu-leaf-754 MuiListItem-default-810 MuiListItem-gutters-815 MuiListItem-divider-814 MuiListItem-button-816" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                    <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                      <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                                        <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-822">
                                                                                            Leaf
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-842" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-842" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </div>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </a>
                                                                  </Link>
                                                                </inject-Link>
                                                              </WithStyles(inject-Link)>
                                                            </Leaf>
                                                          </inject-Leaf-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                          <a data-moov-link="on" className="RSFLink-root-773" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-773" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-773" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-773" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app))>
        <WithStyles(inject-Menu-with-app) theme={{...}}>
          <inject-Menu-with-app theme={{...}} classes={{...}}>
            <Menu theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-139 MuiDrawer-modal-150 RSFMenu-modal-137" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-139 MuiDrawer-modal-150 RSFMenu-modal-137" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-151 MuiDrawer-root-139 MuiDrawer-modal-150 RSFMenu-modal-137 MuiModal-hidden-152">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-154" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-141 RSFMenu-drawer-115 MuiDrawer-paperAnchorLeft-142" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-141 RSFMenu-drawer-115 MuiDrawer-paperAnchorLeft-142" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-156 MuiPaper-elevation16-174 MuiDrawer-paper-141 RSFMenu-drawer-115 MuiDrawer-paperAnchorLeft-142" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-bodyWrap-126" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-183 RSFMenu-list-116 MuiList-padding-184" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>rsfMenu.sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-187 RSFMenu-listItem-129 MuiListItem-default-190 MuiListItem-gutters-195 MuiListItem-divider-194 MuiListItem-button-196 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-189">
                                                                          <ButtonBase className="MuiListItem-root-187 RSFMenu-listItem-129 MuiListItem-default-190 MuiListItem-gutters-195 MuiListItem-divider-194 MuiListItem-button-196 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-189" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-199 MuiListItem-root-187 RSFMenu-listItem-129 MuiListItem-default-190 MuiListItem-gutters-195 MuiListItem-divider-194 MuiListItem-button-196 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-129" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-129" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-202 RSFMenu-listItem-129">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-132">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-132" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-208 RSFMenu-listItemIcon-132">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-124">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-124">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-124">
                                                                                                  <SvgIcon className="RSFMenu-icon-124" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-209 RSFMenu-icon-124" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-218" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-218" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                          <a data-moov-link="on" className="RSFLink-root-153" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-153" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-153" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-249 MuiDrawer-modal-260 RSFMenu-modal-247" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-249 MuiDrawer-modal-260 RSFMenu-modal-247" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-261 MuiDrawer-root-249 MuiDrawer-modal-260 RSFMenu-modal-247 MuiModal-hidden-262">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-264" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-251 RSFMenu-drawer-225 MuiDrawer-paperAnchorLeft-252" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-251 RSFMenu-drawer-225 MuiDrawer-paperAnchorLeft-252" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-266 MuiPaper-elevation16-284 MuiDrawer-paper-251 RSFMenu-drawer-225 MuiDrawer-paperAnchorLeft-252" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-bodyWrap-236" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-293 RSFMenu-list-226 MuiList-padding-294" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>rsfMenu.sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-297 RSFMenu-listItem-239 MuiListItem-default-300 MuiListItem-gutters-305 MuiListItem-divider-304 MuiListItem-button-306 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-299">
                                                                          <ButtonBase className="MuiListItem-root-297 RSFMenu-listItem-239 MuiListItem-default-300 MuiListItem-gutters-305 MuiListItem-divider-304 MuiListItem-button-306 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-299" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-309 MuiListItem-root-297 RSFMenu-listItem-239 MuiListItem-default-300 MuiListItem-gutters-305 MuiListItem-divider-304 MuiListItem-button-306 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-239" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-239" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-312 RSFMenu-listItem-239">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-242">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-242" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-318 RSFMenu-listItemIcon-242">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-234">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-234">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-234">
                                                                                                  <SvgIcon className="RSFMenu-icon-234" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-319 RSFMenu-icon-234" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-328" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-328" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                          <a data-moov-link="on" className="RSFLink-root-263" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-263" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-263" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in simple mode 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-25 MuiDrawer-modal-36 RSFMenu-modal-23" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-25 MuiDrawer-modal-36 RSFMenu-modal-23" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-37 MuiDrawer-root-25 MuiDrawer-modal-36 RSFMenu-modal-23 MuiModal-hidden-38">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-40" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-27 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-28" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-27 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-28" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-42 MuiPaper-elevation16-60 MuiDrawer-paper-27 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-28" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-69 MuiList-padding-70 RSFMenu-list-2">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>rsfMenu.sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-73 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-76 MuiListItem-gutters-81 MuiListItem-divider-80 MuiListItem-button-82 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-75">
                                                                        <ButtonBase className="MuiListItem-root-73 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-76 MuiListItem-gutters-81 MuiListItem-divider-80 MuiListItem-button-82 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-75" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-85 MuiListItem-root-73 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-76 MuiListItem-gutters-81 MuiListItem-divider-80 MuiListItem-button-82 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <WithStyles(ListItemText) className="RSFMenu-listItem-15" primary="Group 1" disableTypography={true}>
                                                                                  <ListItemText className="RSFMenu-listItem-15" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                    <div className="MuiListItemText-root-88 RSFMenu-listItem-15">
                                                                                      Group 1
                                                                                    </div>
                                                                                  </ListItemText>
                                                                                </WithStyles(ListItemText)>
                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-18">
                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-18" classes={{...}}>
                                                                                    <div className="MuiListItemIcon-root-94 RSFMenu-listItemIcon-18">
                                                                                      <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                        <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-10">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-10">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-10">
                                                                                                <SvgIcon className="RSFMenu-icon-10" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-95 RSFMenu-icon-10" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </ExpanderIcon>
                                                                                      </inject-ExpanderIcon-with-app>
                                                                                    </div>
                                                                                  </ListItemIcon>
                                                                                </WithStyles(ListItemIcon)>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-108" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-108" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-104" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-106">
                                                                        <div className="MuiCollapse-wrapperInner-107">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-69 RSFMenu-list-2 MuiList-padding-70">
                                                                                <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>rsfMenu.sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-73 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-76 MuiListItem-gutters-81 MuiListItem-divider-80 MuiListItem-button-82 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-75">
                                                                                                  <ButtonBase className="MuiListItem-root-73 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-76 MuiListItem-gutters-81 MuiListItem-divider-80 MuiListItem-button-82 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-75" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-85 MuiListItem-root-73 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-76 MuiListItem-gutters-81 MuiListItem-divider-80 MuiListItem-button-82 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <WithStyles(ListItemText) className="RSFMenu-listItem-15" primary="Item 1" disableTypography={true}>
                                                                                                            <ListItemText className="RSFMenu-listItem-15" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                              <div className="MuiListItemText-root-88 RSFMenu-listItem-15">
                                                                                                                Item 1
                                                                                                              </div>
                                                                                                            </ListItemText>
                                                                                                          </WithStyles(ListItemText)>
                                                                                                          <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-18">
                                                                                                            <ListItemIcon className="RSFMenu-listItemIcon-18" classes={{...}}>
                                                                                                              <div className="MuiListItemIcon-root-94 RSFMenu-listItemIcon-18">
                                                                                                                <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                    <pure(ExpandMoreIcon) className="RSFMenu-icon-10">
                                                                                                                      <ExpandMoreIcon className="RSFMenu-icon-10">
                                                                                                                        <WithStyles(SvgIcon) className="RSFMenu-icon-10">
                                                                                                                          <SvgIcon className="RSFMenu-icon-10" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                            <svg className="MuiSvgIcon-root-95 RSFMenu-icon-10" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                              <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                              <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                            </svg>
                                                                                                                          </SvgIcon>
                                                                                                                        </WithStyles(SvgIcon)>
                                                                                                                      </ExpandMoreIcon>
                                                                                                                    </pure(ExpandMoreIcon)>
                                                                                                                  </ExpanderIcon>
                                                                                                                </inject-ExpanderIcon-with-app>
                                                                                                              </div>
                                                                                                            </ListItemIcon>
                                                                                                          </WithStyles(ListItemIcon)>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-108" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-108" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-104" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-106">
                                                                                                  <div className="MuiCollapse-wrapperInner-107">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-69 RSFMenu-list-2 MuiList-padding-70">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-39 RSFMenu-link-16" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-73 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiListItem-default-76 MuiListItem-gutters-81 MuiListItem-divider-80 MuiListItem-button-82" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-75">
                                                                                                                                  <ButtonBase className="MuiListItem-root-73 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiListItem-default-76 MuiListItem-gutters-81 MuiListItem-divider-80 MuiListItem-button-82" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-75" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-85 MuiListItem-root-73 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiListItem-default-76 MuiListItem-gutters-81 MuiListItem-divider-80 MuiListItem-button-82" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                            <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                              <div className="MuiListItemText-root-88">
                                                                                                                                                Child 1
                                                                                                                                              </div>
                                                                                                                                            </ListItemText>
                                                                                                                                          </WithStyles(ListItemText)>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-108" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-108" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                          <a data-moov-link="on" className="RSFLink-root-39" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-39" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-39" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render without expand first not root item by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-614 MuiDrawer-modal-625 RSFMenu-modal-612" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-614 MuiDrawer-modal-625 RSFMenu-modal-612" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-626 MuiDrawer-root-614 MuiDrawer-modal-625 RSFMenu-modal-612 MuiModal-hidden-627">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-629" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-616 RSFMenu-drawer-590 MuiDrawer-paperAnchorLeft-617" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-616 RSFMenu-drawer-590 MuiDrawer-paperAnchorLeft-617" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-631 MuiPaper-elevation16-649 MuiDrawer-paper-616 RSFMenu-drawer-590 MuiDrawer-paperAnchorLeft-617" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-bodyWrap-601" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-658 RSFMenu-list-591 MuiList-padding-659" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>rsfMenu.sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-662 RSFMenu-listItem-604 MuiListItem-default-665 MuiListItem-gutters-670 MuiListItem-divider-669 MuiListItem-button-671 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-664">
                                                                          <ButtonBase className="MuiListItem-root-662 RSFMenu-listItem-604 MuiListItem-default-665 MuiListItem-gutters-670 MuiListItem-divider-669 MuiListItem-button-671 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-664" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-674 MuiListItem-root-662 RSFMenu-listItem-604 MuiListItem-default-665 MuiListItem-gutters-670 MuiListItem-divider-669 MuiListItem-button-671 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-604" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-604" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-677 RSFMenu-listItem-604">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-607">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-607" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-683 RSFMenu-listItemIcon-607">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-599">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-599">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-599">
                                                                                                  <SvgIcon className="RSFMenu-icon-599" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-684 RSFMenu-icon-599" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-693" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-693" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-658 RSFMenu-list-591 MuiList-padding-659" style={{...}}>
                                                        <WithStyles(ListItem) divider={true} button={true} onClick={[Function]}>
                                                          <ListItem divider={true} button={true} onClick={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                            <MergeListContext dense={false} alignItems="center">
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-662 MuiListItem-default-665 MuiListItem-gutters-670 MuiListItem-divider-669 MuiListItem-button-671" disabled={false} onClick={[Function]} component="div" focusVisibleClassName="MuiListItem-focusVisible-664">
                                                                <ButtonBase className="MuiListItem-root-662 MuiListItem-default-665 MuiListItem-gutters-670 MuiListItem-divider-669 MuiListItem-button-671" disabled={false} onClick={[Function]} component="div" focusVisibleClassName="MuiListItem-focusVisible-664" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                  <div className="MuiButtonBase-root-674 MuiListItem-root-662 MuiListItem-default-665 MuiListItem-gutters-670 MuiListItem-divider-669 MuiListItem-button-671" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function]}>
                                                                    <WithStyles(ListItemIcon) classes={{...}}>
                                                                      <ListItemIcon classes={{...}}>
                                                                        <div className="MuiListItemIcon-root-683 RSFMenu-header-598">
                                                                          <pure(ChevronLeftIcon) className="RSFMenu-icon-599">
                                                                            <ChevronLeftIcon className="RSFMenu-icon-599">
                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-599">
                                                                                <SvgIcon className="RSFMenu-icon-599" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                  <svg className="MuiSvgIcon-root-684 RSFMenu-icon-599" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                    <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ChevronLeftIcon>
                                                                          </pure(ChevronLeftIcon)>
                                                                        </div>
                                                                      </ListItemIcon>
                                                                    </WithStyles(ListItemIcon)>
                                                                    <WithStyles(ListItemText) classes={{...}} primary={{...}}>
                                                                      <ListItemText primary={{...}} classes={{...}} disableTypography={false} inset={false}>
                                                                        <div className="MuiListItemText-root-677 RSFMenu-headerText-600">
                                                                          <WithStyles(Typography) variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-680" component="span">
                                                                            <Typography variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-680" component="span" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                                              <span className="MuiTypography-root-700 MuiTypography-subtitle1-718 MuiListItemText-primary-680">
                                                                                <div className="RSFMenu-headerText-600">
                                                                                  Group 1
                                                                                   
                                                                                </div>
                                                                              </span>
                                                                            </Typography>
                                                                          </WithStyles(Typography)>
                                                                        </div>
                                                                      </ListItemText>
                                                                    </WithStyles(ListItemText)>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-693" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-693" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </div>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={1} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={1} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>rsfMenu.sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-662 RSFMenu-listItem-604 MuiListItem-default-665 MuiListItem-gutters-670 MuiListItem-divider-669 MuiListItem-button-671 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-664">
                                                                          <ButtonBase className="MuiListItem-root-662 RSFMenu-listItem-604 MuiListItem-default-665 MuiListItem-gutters-670 MuiListItem-divider-669 MuiListItem-button-671 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-664" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-674 MuiListItem-root-662 RSFMenu-listItem-604 MuiListItem-default-665 MuiListItem-gutters-670 MuiListItem-divider-669 MuiListItem-button-671 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined">
                                                                                <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-604" primary="Item 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-604" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-677 RSFMenu-listItem-604">
                                                                                        Item 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-607">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-607" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-683 RSFMenu-listItemIcon-607">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-599">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-599">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-599">
                                                                                                  <SvgIcon className="RSFMenu-icon-599" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-684 RSFMenu-icon-599" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-693" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-693" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                          <a data-moov-link="on" className="RSFLink-root-628" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-628" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-628" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should use custom icons 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-359 MuiDrawer-modal-370 RSFMenu-modal-357" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-359 MuiDrawer-modal-370 RSFMenu-modal-357" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-371 MuiDrawer-root-359 MuiDrawer-modal-370 RSFMenu-modal-357 MuiModal-hidden-372">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-374" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-361 RSFMenu-drawer-335 MuiDrawer-paperAnchorLeft-362" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-361 RSFMenu-drawer-335 MuiDrawer-paperAnchorLeft-362" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-376 MuiPaper-elevation16-394 MuiDrawer-paper-361 RSFMenu-drawer-335 MuiDrawer-paperAnchorLeft-362" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-bodyWrap-346" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-403 RSFMenu-list-336 MuiList-padding-404" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>rsfMenu.sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-407 RSFMenu-listItem-349 MuiListItem-default-410 MuiListItem-gutters-415 MuiListItem-divider-414 MuiListItem-button-416 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-409">
                                                                          <ButtonBase className="MuiListItem-root-407 RSFMenu-listItem-349 MuiListItem-default-410 MuiListItem-gutters-415 MuiListItem-divider-414 MuiListItem-button-416 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-409" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-419 MuiListItem-root-407 RSFMenu-listItem-349 MuiListItem-default-410 MuiListItem-gutters-415 MuiListItem-divider-414 MuiListItem-button-416 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-349" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-349" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-422 RSFMenu-listItem-349">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-352">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-352" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-428 RSFMenu-listItemIcon-352">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-344">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-344">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-344">
                                                                                                  <SvgIcon className="RSFMenu-icon-344" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-429 RSFMenu-icon-344" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-438" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-438" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                          <a data-moov-link="on" className="RSFLink-root-373" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-373" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} app={{...}} anchorProps={{...}} preserveScroll={false}>
                              <a data-moov-link="on" className="RSFLink-root-373" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
