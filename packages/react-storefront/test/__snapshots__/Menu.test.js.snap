// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu custom renderers itemRenderer should be called for each item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-865 MuiDrawer-modal-876 RSFMenu-modal-864" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-865 MuiDrawer-modal-876 RSFMenu-modal-864" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-877 MuiDrawer-root-865 MuiDrawer-modal-876 RSFMenu-modal-864 MuiModal-hidden-878">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-880" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-867 RSFMenu-drawer-842 MuiDrawer-paperAnchorLeft-868" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-867 RSFMenu-drawer-842 MuiDrawer-paperAnchorLeft-868" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-882 MuiPaper-elevation16-900 MuiDrawer-paper-867 RSFMenu-drawer-842 MuiDrawer-paperAnchorLeft-868" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-909 MuiList-padding-910 RSFMenu-list-843">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <div>
                                                            Group 1
                                                          </div>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <div>
                                                            Leaf
                                                          </div>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-879" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-879" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-879" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-879" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu custom renderers itemRenderer should render the default when null is returned 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-936 MuiDrawer-modal-947 RSFMenu-modal-935" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-936 MuiDrawer-modal-947 RSFMenu-modal-935" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-948 MuiDrawer-root-936 MuiDrawer-modal-947 RSFMenu-modal-935 MuiModal-hidden-949">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-951" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-938 RSFMenu-drawer-913 MuiDrawer-paperAnchorLeft-939" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-938 RSFMenu-drawer-913 MuiDrawer-paperAnchorLeft-939" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-953 MuiPaper-elevation16-971 MuiDrawer-paper-938 RSFMenu-drawer-913 MuiDrawer-paperAnchorLeft-939" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-980 MuiList-padding-981 RSFMenu-list-914">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-expander-931 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-986">
                                                                        <ButtonBase className="MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-expander-931 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-986" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-996 MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-expander-931 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <WithStyles(ListItemText) className="RSFMenu-listItem-927" primary="Group 1" disableTypography={true}>
                                                                                  <ListItemText className="RSFMenu-listItem-927" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                    <div className="MuiListItemText-root-999 RSFMenu-listItem-927">
                                                                                      Group 1
                                                                                    </div>
                                                                                  </ListItemText>
                                                                                </WithStyles(ListItemText)>
                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-930">
                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-930" classes={{...}}>
                                                                                    <div className="MuiListItemIcon-root-1005 RSFMenu-listItemIcon-930">
                                                                                      <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                        <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-922">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-922">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-922">
                                                                                                <SvgIcon className="RSFMenu-icon-922" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-1006 RSFMenu-icon-922" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </ExpanderIcon>
                                                                                      </inject-ExpanderIcon-with-app>
                                                                                    </div>
                                                                                  </ListItemIcon>
                                                                                </WithStyles(ListItemIcon)>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1019" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-1019" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-1015" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-1017">
                                                                        <div className="MuiCollapse-wrapperInner-1018">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-980 RSFMenu-list-914 MuiList-padding-981">
                                                                                <inject-Item-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-expander-931 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-986">
                                                                                                  <ButtonBase className="MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-expander-931 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-986" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-996 MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-expander-931 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <WithStyles(ListItemText) className="RSFMenu-listItem-927" primary="Item 1" disableTypography={true}>
                                                                                                            <ListItemText className="RSFMenu-listItem-927" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                              <div className="MuiListItemText-root-999 RSFMenu-listItem-927">
                                                                                                                Item 1
                                                                                                              </div>
                                                                                                            </ListItemText>
                                                                                                          </WithStyles(ListItemText)>
                                                                                                          <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-930">
                                                                                                            <ListItemIcon className="RSFMenu-listItemIcon-930" classes={{...}}>
                                                                                                              <div className="MuiListItemIcon-root-1005 RSFMenu-listItemIcon-930">
                                                                                                                <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                    <pure(ExpandMoreIcon) className="RSFMenu-icon-922">
                                                                                                                      <ExpandMoreIcon className="RSFMenu-icon-922">
                                                                                                                        <WithStyles(SvgIcon) className="RSFMenu-icon-922">
                                                                                                                          <SvgIcon className="RSFMenu-icon-922" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                            <svg className="MuiSvgIcon-root-1006 RSFMenu-icon-922" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                              <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                              <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                            </svg>
                                                                                                                          </SvgIcon>
                                                                                                                        </WithStyles(SvgIcon)>
                                                                                                                      </ExpandMoreIcon>
                                                                                                                    </pure(ExpandMoreIcon)>
                                                                                                                  </ExpanderIcon>
                                                                                                                </inject-ExpanderIcon-with-app>
                                                                                                              </div>
                                                                                                            </ListItemIcon>
                                                                                                          </WithStyles(ListItemIcon)>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1019" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-1019" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-1015" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-1017">
                                                                                                  <div className="MuiCollapse-wrapperInner-1018">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-980 RSFMenu-list-914 MuiList-padding-981">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-928" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-928" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-928" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-950 RSFMenu-link-928" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-leaf-932 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-986">
                                                                                                                                  <ButtonBase className="MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-leaf-932 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-986" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-996 MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-leaf-932 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                            <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                              <div className="MuiListItemText-root-999">
                                                                                                                                                Child 1
                                                                                                                                              </div>
                                                                                                                                            </ListItemText>
                                                                                                                                          </WithStyles(ListItemText)>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1019" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-1019" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Leaf-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Leaf expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-928" server={false} state={{...}} onClick={[Function]}>
                                                                <inject-Link to="/leaf" className="RSFMenu-link-928" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                  <Link to="/leaf" className="RSFMenu-link-928" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                    <a data-moov-link="on" className="RSFLink-root-950 RSFMenu-link-928" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                      <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                        <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-leaf-932 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-986">
                                                                              <ButtonBase className="MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-leaf-932 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-986" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                <div className="MuiButtonBase-root-996 MuiListItem-root-984 RSFMenu-listItem-927 RSFMenu-leaf-932 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                    <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                      <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                                        <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-999">
                                                                                            Leaf
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1019" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-1019" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </div>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </a>
                                                                  </Link>
                                                                </inject-Link>
                                                              </WithStyles(inject-Link)>
                                                            </Leaf>
                                                          </inject-Leaf-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-950" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-950" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-950" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-950" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu custom renderers itemTextRenderer should be called for each item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemTextRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemTextRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemTextRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemTextRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-1049 MuiDrawer-modal-1060 RSFMenu-modal-1048" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-1049 MuiDrawer-modal-1060 RSFMenu-modal-1048" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-1061 MuiDrawer-root-1049 MuiDrawer-modal-1060 RSFMenu-modal-1048 MuiModal-hidden-1062">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-1064" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-1051 RSFMenu-drawer-1026 MuiDrawer-paperAnchorLeft-1052" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-1051 RSFMenu-drawer-1026 MuiDrawer-paperAnchorLeft-1052" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-1066 MuiPaper-elevation16-1084 MuiDrawer-paper-1051 RSFMenu-drawer-1026 MuiDrawer-paperAnchorLeft-1052" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemTextRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemTextRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-1093 MuiList-padding-1094 RSFMenu-list-1027">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemTextRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemTextRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-expander-1044 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1099">
                                                                        <ButtonBase className="MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-expander-1044 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1099" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-1109 MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-expander-1044 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <div>
                                                                                  Group 1
                                                                                </div>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1116" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-1116" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-1112" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-1114">
                                                                        <div className="MuiCollapse-wrapperInner-1115">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-1093 RSFMenu-list-1027 MuiList-padding-1094">
                                                                                <inject-Item-with-app expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-expander-1044 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1099">
                                                                                                  <ButtonBase className="MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-expander-1044 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1099" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-1109 MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-expander-1044 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <div>
                                                                                                            Item 1
                                                                                                          </div>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1116" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-1116" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-1112" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-1114">
                                                                                                  <div className="MuiCollapse-wrapperInner-1115">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-1093 RSFMenu-list-1027 MuiList-padding-1094">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-1041" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-1041" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-1041" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-1063 RSFMenu-link-1041" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-leaf-1045 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1099">
                                                                                                                                  <ButtonBase className="MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-leaf-1045 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1099" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-1109 MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-leaf-1045 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <div>
                                                                                                                                            Child 1
                                                                                                                                          </div>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1116" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-1116" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemTextRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemTextRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Leaf-with-app expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Leaf expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-1041" server={false} state={{...}} onClick={[Function]}>
                                                                <inject-Link to="/leaf" className="RSFMenu-link-1041" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                  <Link to="/leaf" className="RSFMenu-link-1041" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                    <a data-moov-link="on" className="RSFLink-root-1063 RSFMenu-link-1041" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                      <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                        <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-leaf-1045 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1099">
                                                                              <ButtonBase className="MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-leaf-1045 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1099" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                <div className="MuiButtonBase-root-1109 MuiListItem-root-1097 RSFMenu-listItem-1040 RSFMenu-leaf-1045 MuiListItem-default-1100 MuiListItem-gutters-1105 MuiListItem-divider-1104 MuiListItem-button-1106" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                    <ItemContent expandFirstItem={false} itemTextRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                      <div>
                                                                                        Leaf
                                                                                      </div>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1116" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-1116" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </div>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </a>
                                                                  </Link>
                                                                </inject-Link>
                                                              </WithStyles(inject-Link)>
                                                            </Leaf>
                                                          </inject-Leaf-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-1063" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-1063" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-1063" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-1063" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should be able to render leaf as a top level item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-752 MuiDrawer-modal-763 RSFMenu-modal-751" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-752 MuiDrawer-modal-763 RSFMenu-modal-751" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-764 MuiDrawer-root-752 MuiDrawer-modal-763 RSFMenu-modal-751 MuiModal-hidden-765">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-767" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-754 RSFMenu-drawer-729 MuiDrawer-paperAnchorLeft-755" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-754 RSFMenu-drawer-729 MuiDrawer-paperAnchorLeft-755" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-769 MuiPaper-elevation16-787 MuiDrawer-paper-754 RSFMenu-drawer-729 MuiDrawer-paperAnchorLeft-755" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-796 MuiList-padding-797 RSFMenu-list-730">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-expander-747 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-802">
                                                                        <ButtonBase className="MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-expander-747 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-802" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-812 MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-expander-747 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <WithStyles(ListItemText) className="RSFMenu-listItem-743" primary="Group 1" disableTypography={true}>
                                                                                  <ListItemText className="RSFMenu-listItem-743" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                    <div className="MuiListItemText-root-815 RSFMenu-listItem-743">
                                                                                      Group 1
                                                                                    </div>
                                                                                  </ListItemText>
                                                                                </WithStyles(ListItemText)>
                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-746">
                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-746" classes={{...}}>
                                                                                    <div className="MuiListItemIcon-root-821 RSFMenu-listItemIcon-746">
                                                                                      <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                        <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-738">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-738">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-738">
                                                                                                <SvgIcon className="RSFMenu-icon-738" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-822 RSFMenu-icon-738" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </ExpanderIcon>
                                                                                      </inject-ExpanderIcon-with-app>
                                                                                    </div>
                                                                                  </ListItemIcon>
                                                                                </WithStyles(ListItemIcon)>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-835" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-835" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-831" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-833">
                                                                        <div className="MuiCollapse-wrapperInner-834">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-796 RSFMenu-list-730 MuiList-padding-797">
                                                                                <inject-Item-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-expander-747 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-802">
                                                                                                  <ButtonBase className="MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-expander-747 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-802" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-812 MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-expander-747 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <WithStyles(ListItemText) className="RSFMenu-listItem-743" primary="Item 1" disableTypography={true}>
                                                                                                            <ListItemText className="RSFMenu-listItem-743" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                              <div className="MuiListItemText-root-815 RSFMenu-listItem-743">
                                                                                                                Item 1
                                                                                                              </div>
                                                                                                            </ListItemText>
                                                                                                          </WithStyles(ListItemText)>
                                                                                                          <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-746">
                                                                                                            <ListItemIcon className="RSFMenu-listItemIcon-746" classes={{...}}>
                                                                                                              <div className="MuiListItemIcon-root-821 RSFMenu-listItemIcon-746">
                                                                                                                <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                    <pure(ExpandMoreIcon) className="RSFMenu-icon-738">
                                                                                                                      <ExpandMoreIcon className="RSFMenu-icon-738">
                                                                                                                        <WithStyles(SvgIcon) className="RSFMenu-icon-738">
                                                                                                                          <SvgIcon className="RSFMenu-icon-738" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                            <svg className="MuiSvgIcon-root-822 RSFMenu-icon-738" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                              <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                              <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                            </svg>
                                                                                                                          </SvgIcon>
                                                                                                                        </WithStyles(SvgIcon)>
                                                                                                                      </ExpandMoreIcon>
                                                                                                                    </pure(ExpandMoreIcon)>
                                                                                                                  </ExpanderIcon>
                                                                                                                </inject-ExpanderIcon-with-app>
                                                                                                              </div>
                                                                                                            </ListItemIcon>
                                                                                                          </WithStyles(ListItemIcon)>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-835" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-835" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-831" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-833">
                                                                                                  <div className="MuiCollapse-wrapperInner-834">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-796 RSFMenu-list-730 MuiList-padding-797">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-744" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-744" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-744" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-766 RSFMenu-link-744" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-leaf-748 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-802">
                                                                                                                                  <ButtonBase className="MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-leaf-748 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-802" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-812 MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-leaf-748 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                            <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                              <div className="MuiListItemText-root-815">
                                                                                                                                                Child 1
                                                                                                                                              </div>
                                                                                                                                            </ListItemText>
                                                                                                                                          </WithStyles(ListItemText)>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-835" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-835" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Leaf-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Leaf expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-744" server={false} state={{...}} onClick={[Function]}>
                                                                <inject-Link to="/leaf" className="RSFMenu-link-744" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                  <Link to="/leaf" className="RSFMenu-link-744" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                    <a data-moov-link="on" className="RSFLink-root-766 RSFMenu-link-744" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                      <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                        <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-leaf-748 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-802">
                                                                              <ButtonBase className="MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-leaf-748 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-802" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                <div className="MuiButtonBase-root-812 MuiListItem-root-800 RSFMenu-listItem-743 RSFMenu-leaf-748 MuiListItem-default-803 MuiListItem-gutters-808 MuiListItem-divider-807 MuiListItem-button-809" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                    <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                      <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                                        <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-815">
                                                                                            Leaf
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-835" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-835" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </div>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </a>
                                                                  </Link>
                                                                </inject-Link>
                                                              </WithStyles(inject-Link)>
                                                            </Leaf>
                                                          </inject-Leaf-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-766" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-766" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-766" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-766" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app))>
        <WithStyles(inject-Menu-with-app) theme={{...}}>
          <inject-Menu-with-app theme={{...}} classes={{...}}>
            <Menu theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-137 MuiDrawer-modal-148 RSFMenu-modal-136" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-137 MuiDrawer-modal-148 RSFMenu-modal-136" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-149 MuiDrawer-root-137 MuiDrawer-modal-148 RSFMenu-modal-136 MuiModal-hidden-150">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-152" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-139 RSFMenu-drawer-114 MuiDrawer-paperAnchorLeft-140" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-139 RSFMenu-drawer-114 MuiDrawer-paperAnchorLeft-140" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-154 MuiPaper-elevation16-172 MuiDrawer-paper-139 RSFMenu-drawer-114 MuiDrawer-paperAnchorLeft-140" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-hbox-125" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-181 RSFMenu-list-115 MuiList-padding-182" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-185 RSFMenu-listItem-128 MuiListItem-default-188 MuiListItem-gutters-193 MuiListItem-divider-192 MuiListItem-button-194 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-187">
                                                                          <ButtonBase className="MuiListItem-root-185 RSFMenu-listItem-128 MuiListItem-default-188 MuiListItem-gutters-193 MuiListItem-divider-192 MuiListItem-button-194 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-187" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-197 MuiListItem-root-185 RSFMenu-listItem-128 MuiListItem-default-188 MuiListItem-gutters-193 MuiListItem-divider-192 MuiListItem-button-194 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-128" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-128" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-200 RSFMenu-listItem-128">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-131">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-131" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-206 RSFMenu-listItemIcon-131">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-123">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-123">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-123">
                                                                                                  <SvgIcon className="RSFMenu-icon-123" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-207 RSFMenu-icon-123" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-216" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-216" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-151" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-151" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-151" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-246 MuiDrawer-modal-257 RSFMenu-modal-245" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-246 MuiDrawer-modal-257 RSFMenu-modal-245" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-258 MuiDrawer-root-246 MuiDrawer-modal-257 RSFMenu-modal-245 MuiModal-hidden-259">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-261" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-248 RSFMenu-drawer-223 MuiDrawer-paperAnchorLeft-249" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-248 RSFMenu-drawer-223 MuiDrawer-paperAnchorLeft-249" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-263 MuiPaper-elevation16-281 MuiDrawer-paper-248 RSFMenu-drawer-223 MuiDrawer-paperAnchorLeft-249" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-hbox-234" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-290 RSFMenu-list-224 MuiList-padding-291" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-294 RSFMenu-listItem-237 MuiListItem-default-297 MuiListItem-gutters-302 MuiListItem-divider-301 MuiListItem-button-303 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-296">
                                                                          <ButtonBase className="MuiListItem-root-294 RSFMenu-listItem-237 MuiListItem-default-297 MuiListItem-gutters-302 MuiListItem-divider-301 MuiListItem-button-303 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-296" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-306 MuiListItem-root-294 RSFMenu-listItem-237 MuiListItem-default-297 MuiListItem-gutters-302 MuiListItem-divider-301 MuiListItem-button-303 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-237" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-237" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-309 RSFMenu-listItem-237">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-240">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-240" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-315 RSFMenu-listItemIcon-240">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-232">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-232">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-232">
                                                                                                  <SvgIcon className="RSFMenu-icon-232" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-316 RSFMenu-icon-232" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-325" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-325" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-260" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-260" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-260" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in simple mode 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-24 MuiDrawer-modal-35 RSFMenu-modal-23" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-24 MuiDrawer-modal-35 RSFMenu-modal-23" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-36 MuiDrawer-root-24 MuiDrawer-modal-35 RSFMenu-modal-23 MuiModal-hidden-37">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-39" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-26 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-27" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-26 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-27" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-41 MuiPaper-elevation16-59 MuiDrawer-paper-26 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-27" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-68 MuiList-padding-69 RSFMenu-list-2">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-74">
                                                                        <ButtonBase className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-74" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-84 MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <WithStyles(ListItemText) className="RSFMenu-listItem-15" primary="Group 1" disableTypography={true}>
                                                                                  <ListItemText className="RSFMenu-listItem-15" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                    <div className="MuiListItemText-root-87 RSFMenu-listItem-15">
                                                                                      Group 1
                                                                                    </div>
                                                                                  </ListItemText>
                                                                                </WithStyles(ListItemText)>
                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-18">
                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-18" classes={{...}}>
                                                                                    <div className="MuiListItemIcon-root-93 RSFMenu-listItemIcon-18">
                                                                                      <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                        <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-10">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-10">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-10">
                                                                                                <SvgIcon className="RSFMenu-icon-10" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-94 RSFMenu-icon-10" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </ExpanderIcon>
                                                                                      </inject-ExpanderIcon-with-app>
                                                                                    </div>
                                                                                  </ListItemIcon>
                                                                                </WithStyles(ListItemIcon)>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-107" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-107" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-103" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-105">
                                                                        <div className="MuiCollapse-wrapperInner-106">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-68 RSFMenu-list-2 MuiList-padding-69">
                                                                                <inject-Item-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-74">
                                                                                                  <ButtonBase className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-74" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-84 MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <WithStyles(ListItemText) className="RSFMenu-listItem-15" primary="Item 1" disableTypography={true}>
                                                                                                            <ListItemText className="RSFMenu-listItem-15" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                              <div className="MuiListItemText-root-87 RSFMenu-listItem-15">
                                                                                                                Item 1
                                                                                                              </div>
                                                                                                            </ListItemText>
                                                                                                          </WithStyles(ListItemText)>
                                                                                                          <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-18">
                                                                                                            <ListItemIcon className="RSFMenu-listItemIcon-18" classes={{...}}>
                                                                                                              <div className="MuiListItemIcon-root-93 RSFMenu-listItemIcon-18">
                                                                                                                <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                    <pure(ExpandMoreIcon) className="RSFMenu-icon-10">
                                                                                                                      <ExpandMoreIcon className="RSFMenu-icon-10">
                                                                                                                        <WithStyles(SvgIcon) className="RSFMenu-icon-10">
                                                                                                                          <SvgIcon className="RSFMenu-icon-10" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                            <svg className="MuiSvgIcon-root-94 RSFMenu-icon-10" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                              <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                              <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                            </svg>
                                                                                                                          </SvgIcon>
                                                                                                                        </WithStyles(SvgIcon)>
                                                                                                                      </ExpandMoreIcon>
                                                                                                                    </pure(ExpandMoreIcon)>
                                                                                                                  </ExpanderIcon>
                                                                                                                </inject-ExpanderIcon-with-app>
                                                                                                              </div>
                                                                                                            </ListItemIcon>
                                                                                                          </WithStyles(ListItemIcon)>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-107" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-107" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-103" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-105">
                                                                                                  <div className="MuiCollapse-wrapperInner-106">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-68 RSFMenu-list-2 MuiList-padding-69">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-38 RSFMenu-link-16" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-74">
                                                                                                                                  <ButtonBase className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-74" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-84 MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                            <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                              <div className="MuiListItemText-root-87">
                                                                                                                                                Child 1
                                                                                                                                              </div>
                                                                                                                                            </ListItemText>
                                                                                                                                          </WithStyles(ListItemText)>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-107" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-107" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-38" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-38" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-38" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render without expand first not root item by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-608 MuiDrawer-modal-619 RSFMenu-modal-607" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-608 MuiDrawer-modal-619 RSFMenu-modal-607" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-620 MuiDrawer-root-608 MuiDrawer-modal-619 RSFMenu-modal-607 MuiModal-hidden-621">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-623" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-610 RSFMenu-drawer-585 MuiDrawer-paperAnchorLeft-611" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-610 RSFMenu-drawer-585 MuiDrawer-paperAnchorLeft-611" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-625 MuiPaper-elevation16-643 MuiDrawer-paper-610 RSFMenu-drawer-585 MuiDrawer-paperAnchorLeft-611" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-hbox-596" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-652 RSFMenu-list-586 MuiList-padding-653" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-656 RSFMenu-listItem-599 MuiListItem-default-659 MuiListItem-gutters-664 MuiListItem-divider-663 MuiListItem-button-665 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-658">
                                                                          <ButtonBase className="MuiListItem-root-656 RSFMenu-listItem-599 MuiListItem-default-659 MuiListItem-gutters-664 MuiListItem-divider-663 MuiListItem-button-665 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-658" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-668 MuiListItem-root-656 RSFMenu-listItem-599 MuiListItem-default-659 MuiListItem-gutters-664 MuiListItem-divider-663 MuiListItem-button-665 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-599" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-599" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-671 RSFMenu-listItem-599">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-602">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-602" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-677 RSFMenu-listItemIcon-602">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-594">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-594">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-594">
                                                                                                  <SvgIcon className="RSFMenu-icon-594" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-678 RSFMenu-icon-594" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-687" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-687" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-652 RSFMenu-list-586 MuiList-padding-653" style={{...}}>
                                                        <WithStyles(ListItem) divider={true} button={true} onClick={[Function]}>
                                                          <ListItem divider={true} button={true} onClick={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                            <MergeListContext dense={false} alignItems="center">
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-656 MuiListItem-default-659 MuiListItem-gutters-664 MuiListItem-divider-663 MuiListItem-button-665" disabled={false} onClick={[Function]} component="div" focusVisibleClassName="MuiListItem-focusVisible-658">
                                                                <ButtonBase className="MuiListItem-root-656 MuiListItem-default-659 MuiListItem-gutters-664 MuiListItem-divider-663 MuiListItem-button-665" disabled={false} onClick={[Function]} component="div" focusVisibleClassName="MuiListItem-focusVisible-658" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                  <div className="MuiButtonBase-root-668 MuiListItem-root-656 MuiListItem-default-659 MuiListItem-gutters-664 MuiListItem-divider-663 MuiListItem-button-665" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function]}>
                                                                    <WithStyles(ListItemIcon) classes={{...}}>
                                                                      <ListItemIcon classes={{...}}>
                                                                        <div className="MuiListItemIcon-root-677 RSFMenu-header-593">
                                                                          <pure(ChevronLeftIcon) className="RSFMenu-icon-594">
                                                                            <ChevronLeftIcon className="RSFMenu-icon-594">
                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-594">
                                                                                <SvgIcon className="RSFMenu-icon-594" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                  <svg className="MuiSvgIcon-root-678 RSFMenu-icon-594" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                    <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ChevronLeftIcon>
                                                                          </pure(ChevronLeftIcon)>
                                                                        </div>
                                                                      </ListItemIcon>
                                                                    </WithStyles(ListItemIcon)>
                                                                    <WithStyles(ListItemText) classes={{...}} primary={{...}}>
                                                                      <ListItemText primary={{...}} classes={{...}} disableTypography={false} inset={false}>
                                                                        <div className="MuiListItemText-root-671 RSFMenu-headerText-595">
                                                                          <WithStyles(Typography) variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-674" component="span">
                                                                            <Typography variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-674" component="span" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                                              <span className="MuiTypography-root-694 MuiTypography-subtitle1-712 MuiListItemText-primary-674">
                                                                                <div className="RSFMenu-headerText-595">
                                                                                  Group 1
                                                                                   
                                                                                </div>
                                                                              </span>
                                                                            </Typography>
                                                                          </WithStyles(Typography)>
                                                                        </div>
                                                                      </ListItemText>
                                                                    </WithStyles(ListItemText)>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-687" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-687" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </div>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={1} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={1} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-656 RSFMenu-listItem-599 MuiListItem-default-659 MuiListItem-gutters-664 MuiListItem-divider-663 MuiListItem-button-665 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-658">
                                                                          <ButtonBase className="MuiListItem-root-656 RSFMenu-listItem-599 MuiListItem-default-659 MuiListItem-gutters-664 MuiListItem-divider-663 MuiListItem-button-665 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-658" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-668 MuiListItem-root-656 RSFMenu-listItem-599 MuiListItem-default-659 MuiListItem-gutters-664 MuiListItem-divider-663 MuiListItem-button-665 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined">
                                                                                <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-599" primary="Item 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-599" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-671 RSFMenu-listItem-599">
                                                                                        Item 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-602">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-602" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-677 RSFMenu-listItemIcon-602">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-594">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-594">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-594">
                                                                                                  <SvgIcon className="RSFMenu-icon-594" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-678 RSFMenu-icon-594" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-687" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-687" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-622" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-622" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-622" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should use custom icons 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-355 MuiDrawer-modal-366 RSFMenu-modal-354" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-355 MuiDrawer-modal-366 RSFMenu-modal-354" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-367 MuiDrawer-root-355 MuiDrawer-modal-366 RSFMenu-modal-354 MuiModal-hidden-368">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-370" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-357 RSFMenu-drawer-332 MuiDrawer-paperAnchorLeft-358" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-357 RSFMenu-drawer-332 MuiDrawer-paperAnchorLeft-358" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-372 MuiPaper-elevation16-390 MuiDrawer-paper-357 RSFMenu-drawer-332 MuiDrawer-paperAnchorLeft-358" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-hbox-343" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-399 RSFMenu-list-333 MuiList-padding-400" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-403 RSFMenu-listItem-346 MuiListItem-default-406 MuiListItem-gutters-411 MuiListItem-divider-410 MuiListItem-button-412 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-405">
                                                                          <ButtonBase className="MuiListItem-root-403 RSFMenu-listItem-346 MuiListItem-default-406 MuiListItem-gutters-411 MuiListItem-divider-410 MuiListItem-button-412 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-405" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-415 MuiListItem-root-403 RSFMenu-listItem-346 MuiListItem-default-406 MuiListItem-gutters-411 MuiListItem-divider-410 MuiListItem-button-412 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-346" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-346" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-418 RSFMenu-listItem-346">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-349">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-349" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-424 RSFMenu-listItemIcon-349">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemTextRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-341">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-341">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-341">
                                                                                                  <SvgIcon className="RSFMenu-icon-341" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-425 RSFMenu-icon-341" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-434" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-434" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-369" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-369" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-369" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
