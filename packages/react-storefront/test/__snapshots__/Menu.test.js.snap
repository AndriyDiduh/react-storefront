// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu should be able to render leaf as a top level item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-770 MuiDrawer-modal-781 RSFMenu-modal-769" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-770 MuiDrawer-modal-781 RSFMenu-modal-769" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-782 MuiDrawer-root-770 MuiDrawer-modal-781 RSFMenu-modal-769 MuiModal-hidden-783">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-785" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-772 RSFMenu-drawer-747 MuiDrawer-paperAnchorLeft-773" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-772 RSFMenu-drawer-747 MuiDrawer-paperAnchorLeft-773" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-787 MuiPaper-elevation16-805 MuiDrawer-paper-772 RSFMenu-drawer-747 MuiDrawer-paperAnchorLeft-773" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <MenuList classes={{...}}>
                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-814 MuiList-padding-815 RSFMenu-list-748" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                        <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                              <Branch expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                <div amp-bind="class=>sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                      <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-expander-765 MuiMenuItem-gutters-819 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                        <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-expander-765 MuiMenuItem-gutters-819 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-expander-765 MuiMenuItem-gutters-819 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-823">
                                                                              <ButtonBase className="MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-expander-765 MuiMenuItem-gutters-819 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-823" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                <li className="MuiButtonBase-root-833 MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-expander-765 MuiMenuItem-gutters-819 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                                    <ItemContent expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                      <WithStyles(ListItemText) className="RSFMenu-listItem-761" primary="Group 1" disableTypography={true}>
                                                                                        <ListItemText className="RSFMenu-listItem-761" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-836 RSFMenu-listItem-761">
                                                                                            Group 1
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-764">
                                                                                        <ListItemIcon className="RSFMenu-listItemIcon-764" classes={{...}}>
                                                                                          <div className="MuiListItemIcon-root-842 RSFMenu-listItemIcon-764">
                                                                                            <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                              <ExpanderIcon expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                                <pure(ExpandMoreIcon) className="RSFMenu-icon-756">
                                                                                                  <ExpandMoreIcon className="RSFMenu-icon-756">
                                                                                                    <WithStyles(SvgIcon) className="RSFMenu-icon-756">
                                                                                                      <SvgIcon className="RSFMenu-icon-756" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                        <svg className="MuiSvgIcon-root-843 RSFMenu-icon-756" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                          <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                          <path fill="none" d="M0 0h24v24H0z" />
                                                                                                        </svg>
                                                                                                      </SvgIcon>
                                                                                                    </WithStyles(SvgIcon)>
                                                                                                  </ExpandMoreIcon>
                                                                                                </pure(ExpandMoreIcon)>
                                                                                              </ExpanderIcon>
                                                                                            </inject-ExpanderIcon-with-app>
                                                                                          </div>
                                                                                        </ListItemIcon>
                                                                                      </WithStyles(ListItemIcon)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-856" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-856" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </li>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </MenuItem>
                                                                  </WithStyles(MenuItem)>
                                                                </div>
                                                                <WithStyles(Collapse) in={false} timeout="auto">
                                                                  <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                    <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                      <div className="MuiCollapse-container-852" style={{...}}>
                                                                        <div className="MuiCollapse-wrapper-854">
                                                                          <div className="MuiCollapse-wrapperInner-855">
                                                                            <MenuList component="div" classes={{...}}>
                                                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                  <div className="MuiList-root-814 RSFMenu-list-748 MuiList-padding-815" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                    <inject-Item-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                      <Item expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                        <inject-Branch-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                          <Branch expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                            <div amp-bind="class=>sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                              <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                                <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                  <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-expander-765 MuiMenuItem-gutters-819 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                                                    <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-expander-765 MuiMenuItem-gutters-819 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                      <MergeListContext dense={false} alignItems="center">
                                                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-expander-765 MuiMenuItem-gutters-819 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-823">
                                                                                                          <ButtonBase className="MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-expander-765 MuiMenuItem-gutters-819 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-823" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                            <li className="MuiButtonBase-root-833 MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-expander-765 MuiMenuItem-gutters-819 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                                <ItemContent expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-761" primary="Item 1" disableTypography={true}>
                                                                                                                    <ListItemText className="RSFMenu-listItem-761" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                      <div className="MuiListItemText-root-836 RSFMenu-listItem-761">
                                                                                                                        Item 1
                                                                                                                      </div>
                                                                                                                    </ListItemText>
                                                                                                                  </WithStyles(ListItemText)>
                                                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-764">
                                                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-764" classes={{...}}>
                                                                                                                      <div className="MuiListItemIcon-root-842 RSFMenu-listItemIcon-764">
                                                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                          <ExpanderIcon expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                            <pure(ExpandMoreIcon) className="RSFMenu-icon-756">
                                                                                                                              <ExpandMoreIcon className="RSFMenu-icon-756">
                                                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-756">
                                                                                                                                  <SvgIcon className="RSFMenu-icon-756" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                                    <svg className="MuiSvgIcon-root-843 RSFMenu-icon-756" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                                      <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                                    </svg>
                                                                                                                                  </SvgIcon>
                                                                                                                                </WithStyles(SvgIcon)>
                                                                                                                              </ExpandMoreIcon>
                                                                                                                            </pure(ExpandMoreIcon)>
                                                                                                                          </ExpanderIcon>
                                                                                                                        </inject-ExpanderIcon-with-app>
                                                                                                                      </div>
                                                                                                                    </ListItemIcon>
                                                                                                                  </WithStyles(ListItemIcon)>
                                                                                                                </ItemContent>
                                                                                                              </inject-ItemContent-with-app>
                                                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-856" childFactory={[Function: childFactory]}>
                                                                                                                      <span className="MuiTouchRipple-root-856" />
                                                                                                                    </TransitionGroup>
                                                                                                                  </TouchRipple>
                                                                                                                </WithStyles(TouchRipple)>
                                                                                                              </NoSsr>
                                                                                                            </li>
                                                                                                          </ButtonBase>
                                                                                                        </WithStyles(ButtonBase)>
                                                                                                      </MergeListContext>
                                                                                                    </ListItem>
                                                                                                  </WithStyles(ListItem)>
                                                                                                </MenuItem>
                                                                                              </WithStyles(MenuItem)>
                                                                                            </div>
                                                                                            <WithStyles(Collapse) in={false} timeout="auto">
                                                                                              <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                                <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                                  <div className="MuiCollapse-container-852" style={{...}}>
                                                                                                    <div className="MuiCollapse-wrapper-854">
                                                                                                      <div className="MuiCollapse-wrapperInner-855">
                                                                                                        <MenuList component="div" classes={{...}}>
                                                                                                          <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                                            <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                              <div className="MuiList-root-814 RSFMenu-list-748 MuiList-padding-815" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                                                <inject-Item-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                  <Item expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                    <inject-Leaf-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                      <Leaf expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                        <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-762" server={false} state={{...}} onClick={[Function]}>
                                                                                                                          <inject-Link to="/item1/child1" className="RSFMenu-link-762" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                            <Link to="/item1/child1" className="RSFMenu-link-762" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                              <a data-moov-link="on" className="RSFLink-root-784 RSFMenu-link-762" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                                <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                                  <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-leaf-766 MuiMenuItem-gutters-819" divider={true}>
                                                                                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-leaf-766 MuiMenuItem-gutters-819" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                                                        <MergeListContext dense={false} alignItems="center">
                                                                                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-leaf-766 MuiMenuItem-gutters-819" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-823">
                                                                                                                                            <ButtonBase className="MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-leaf-766 MuiMenuItem-gutters-819" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-823" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                                              <li className="MuiButtonBase-root-833 MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-leaf-766 MuiMenuItem-gutters-819" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                                                <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                                  <ItemContent expandFirstItem={false} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                                        <div className="MuiListItemText-root-836">
                                                                                                                                                          Child 1
                                                                                                                                                        </div>
                                                                                                                                                      </ListItemText>
                                                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                                                  </ItemContent>
                                                                                                                                                </inject-ItemContent-with-app>
                                                                                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-856" childFactory={[Function: childFactory]}>
                                                                                                                                                        <span className="MuiTouchRipple-root-856" />
                                                                                                                                                      </TransitionGroup>
                                                                                                                                                    </TouchRipple>
                                                                                                                                                  </WithStyles(TouchRipple)>
                                                                                                                                                </NoSsr>
                                                                                                                                              </li>
                                                                                                                                            </ButtonBase>
                                                                                                                                          </WithStyles(ButtonBase)>
                                                                                                                                        </MergeListContext>
                                                                                                                                      </ListItem>
                                                                                                                                    </WithStyles(ListItem)>
                                                                                                                                  </MenuItem>
                                                                                                                                </WithStyles(MenuItem)>
                                                                                                                              </a>
                                                                                                                            </Link>
                                                                                                                          </inject-Link>
                                                                                                                        </WithStyles(inject-Link)>
                                                                                                                      </Leaf>
                                                                                                                    </inject-Leaf-with-app>
                                                                                                                  </Item>
                                                                                                                </inject-Item-with-app>
                                                                                                              </div>
                                                                                                            </List>
                                                                                                          </WithStyles(List)>
                                                                                                        </MenuList>
                                                                                                      </div>
                                                                                                    </div>
                                                                                                  </div>
                                                                                                </Transition>
                                                                                              </Collapse>
                                                                                            </WithStyles(Collapse)>
                                                                                          </Branch>
                                                                                        </inject-Branch-with-app>
                                                                                      </Item>
                                                                                    </inject-Item-with-app>
                                                                                  </div>
                                                                                </List>
                                                                              </WithStyles(List)>
                                                                            </MenuList>
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </WithStyles(Collapse)>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                        <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Leaf-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                              <Leaf expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-762" server={false} state={{...}} onClick={[Function]}>
                                                                  <inject-Link to="/leaf" className="RSFMenu-link-762" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                    <Link to="/leaf" className="RSFMenu-link-762" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                      <a data-moov-link="on" className="RSFLink-root-784 RSFMenu-link-762" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                        <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                          <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-leaf-766 MuiMenuItem-gutters-819" divider={true}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-leaf-766 MuiMenuItem-gutters-819" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-leaf-766 MuiMenuItem-gutters-819" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-823">
                                                                                    <ButtonBase className="MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-leaf-766 MuiMenuItem-gutters-819" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-823" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-833 MuiListItem-root-821 MuiListItem-default-824 MuiListItem-gutters-829 MuiListItem-divider-828 MuiListItem-button-830 MuiMenuItem-root-818 RSFMenu-listItem-761 RSFMenu-leaf-766 MuiMenuItem-gutters-819" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                        <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                          <ItemContent expandFirstItem={false} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                            <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                                              <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                                <div className="MuiListItemText-root-836">
                                                                                                  Leaf
                                                                                                </div>
                                                                                              </ListItemText>
                                                                                            </WithStyles(ListItemText)>
                                                                                          </ItemContent>
                                                                                        </inject-ItemContent-with-app>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-856" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-856" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                      </a>
                                                                    </Link>
                                                                  </inject-Link>
                                                                </WithStyles(inject-Link)>
                                                              </Leaf>
                                                            </inject-Leaf-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </MenuList>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-784" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-784" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-784" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-784" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should call a custom itemRenderer 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-886 MuiDrawer-modal-897 RSFMenu-modal-885" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-886 MuiDrawer-modal-897 RSFMenu-modal-885" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-898 MuiDrawer-root-886 MuiDrawer-modal-897 RSFMenu-modal-885 MuiModal-hidden-899">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-901" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-888 RSFMenu-drawer-863 MuiDrawer-paperAnchorLeft-889" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-888 RSFMenu-drawer-863 MuiDrawer-paperAnchorLeft-889" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-903 MuiPaper-elevation16-921 MuiDrawer-paper-888 RSFMenu-drawer-863 MuiDrawer-paperAnchorLeft-889" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <MenuList classes={{...}}>
                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-930 MuiList-padding-931 RSFMenu-list-864" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                        <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                              <Branch expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                <div amp-bind="class=>sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                      <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-expander-881 MuiMenuItem-gutters-935 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                        <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-expander-881 MuiMenuItem-gutters-935 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-expander-881 MuiMenuItem-gutters-935 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-939">
                                                                              <ButtonBase className="MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-expander-881 MuiMenuItem-gutters-935 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-939" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                <li className="MuiButtonBase-root-949 MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-expander-881 MuiMenuItem-gutters-935 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                                    <ItemContent expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                      <WithStyles(ListItemText) className="RSFMenu-listItem-877" primary="Group 1" disableTypography={true}>
                                                                                        <ListItemText className="RSFMenu-listItem-877" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-952 RSFMenu-listItem-877">
                                                                                            Group 1
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-880">
                                                                                        <ListItemIcon className="RSFMenu-listItemIcon-880" classes={{...}}>
                                                                                          <div className="MuiListItemIcon-root-958 RSFMenu-listItemIcon-880">
                                                                                            <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                              <ExpanderIcon expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                                <pure(ExpandMoreIcon) className="RSFMenu-icon-872">
                                                                                                  <ExpandMoreIcon className="RSFMenu-icon-872">
                                                                                                    <WithStyles(SvgIcon) className="RSFMenu-icon-872">
                                                                                                      <SvgIcon className="RSFMenu-icon-872" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                        <svg className="MuiSvgIcon-root-959 RSFMenu-icon-872" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                          <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                          <path fill="none" d="M0 0h24v24H0z" />
                                                                                                        </svg>
                                                                                                      </SvgIcon>
                                                                                                    </WithStyles(SvgIcon)>
                                                                                                  </ExpandMoreIcon>
                                                                                                </pure(ExpandMoreIcon)>
                                                                                              </ExpanderIcon>
                                                                                            </inject-ExpanderIcon-with-app>
                                                                                          </div>
                                                                                        </ListItemIcon>
                                                                                      </WithStyles(ListItemIcon)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-972" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-972" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </li>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </MenuItem>
                                                                  </WithStyles(MenuItem)>
                                                                </div>
                                                                <WithStyles(Collapse) in={false} timeout="auto">
                                                                  <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                    <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                      <div className="MuiCollapse-container-968" style={{...}}>
                                                                        <div className="MuiCollapse-wrapper-970">
                                                                          <div className="MuiCollapse-wrapperInner-971">
                                                                            <MenuList component="div" classes={{...}}>
                                                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                  <div className="MuiList-root-930 RSFMenu-list-864 MuiList-padding-931" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                    <inject-Item-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                      <Item expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                        <inject-Branch-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                          <Branch expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                            <div amp-bind="class=>sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                              <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                                <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                  <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-expander-881 MuiMenuItem-gutters-935 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                                                    <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-expander-881 MuiMenuItem-gutters-935 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                      <MergeListContext dense={false} alignItems="center">
                                                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-expander-881 MuiMenuItem-gutters-935 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-939">
                                                                                                          <ButtonBase className="MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-expander-881 MuiMenuItem-gutters-935 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-939" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                            <li className="MuiButtonBase-root-949 MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-expander-881 MuiMenuItem-gutters-935 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                                <ItemContent expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-877" primary="Item 1" disableTypography={true}>
                                                                                                                    <ListItemText className="RSFMenu-listItem-877" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                      <div className="MuiListItemText-root-952 RSFMenu-listItem-877">
                                                                                                                        Item 1
                                                                                                                      </div>
                                                                                                                    </ListItemText>
                                                                                                                  </WithStyles(ListItemText)>
                                                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-880">
                                                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-880" classes={{...}}>
                                                                                                                      <div className="MuiListItemIcon-root-958 RSFMenu-listItemIcon-880">
                                                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                          <ExpanderIcon expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                            <pure(ExpandMoreIcon) className="RSFMenu-icon-872">
                                                                                                                              <ExpandMoreIcon className="RSFMenu-icon-872">
                                                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-872">
                                                                                                                                  <SvgIcon className="RSFMenu-icon-872" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                                    <svg className="MuiSvgIcon-root-959 RSFMenu-icon-872" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                                      <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                                    </svg>
                                                                                                                                  </SvgIcon>
                                                                                                                                </WithStyles(SvgIcon)>
                                                                                                                              </ExpandMoreIcon>
                                                                                                                            </pure(ExpandMoreIcon)>
                                                                                                                          </ExpanderIcon>
                                                                                                                        </inject-ExpanderIcon-with-app>
                                                                                                                      </div>
                                                                                                                    </ListItemIcon>
                                                                                                                  </WithStyles(ListItemIcon)>
                                                                                                                </ItemContent>
                                                                                                              </inject-ItemContent-with-app>
                                                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-972" childFactory={[Function: childFactory]}>
                                                                                                                      <span className="MuiTouchRipple-root-972" />
                                                                                                                    </TransitionGroup>
                                                                                                                  </TouchRipple>
                                                                                                                </WithStyles(TouchRipple)>
                                                                                                              </NoSsr>
                                                                                                            </li>
                                                                                                          </ButtonBase>
                                                                                                        </WithStyles(ButtonBase)>
                                                                                                      </MergeListContext>
                                                                                                    </ListItem>
                                                                                                  </WithStyles(ListItem)>
                                                                                                </MenuItem>
                                                                                              </WithStyles(MenuItem)>
                                                                                            </div>
                                                                                            <WithStyles(Collapse) in={false} timeout="auto">
                                                                                              <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                                <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                                  <div className="MuiCollapse-container-968" style={{...}}>
                                                                                                    <div className="MuiCollapse-wrapper-970">
                                                                                                      <div className="MuiCollapse-wrapperInner-971">
                                                                                                        <MenuList component="div" classes={{...}}>
                                                                                                          <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                                            <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                              <div className="MuiList-root-930 RSFMenu-list-864 MuiList-padding-931" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                                                <inject-Item-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                  <Item expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                    <inject-Leaf-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                      <Leaf expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                        <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-878" server={false} state={{...}} onClick={[Function]}>
                                                                                                                          <inject-Link to="/item1/child1" className="RSFMenu-link-878" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                            <Link to="/item1/child1" className="RSFMenu-link-878" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                              <a data-moov-link="on" className="RSFLink-root-900 RSFMenu-link-878" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                                <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                                  <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-leaf-882 MuiMenuItem-gutters-935" divider={true}>
                                                                                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-leaf-882 MuiMenuItem-gutters-935" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                                                        <MergeListContext dense={false} alignItems="center">
                                                                                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-leaf-882 MuiMenuItem-gutters-935" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-939">
                                                                                                                                            <ButtonBase className="MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-leaf-882 MuiMenuItem-gutters-935" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-939" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                                              <li className="MuiButtonBase-root-949 MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-leaf-882 MuiMenuItem-gutters-935" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                                                <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                                  <ItemContent expandFirstItem={false} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                                        <div className="MuiListItemText-root-952">
                                                                                                                                                          Child 1
                                                                                                                                                        </div>
                                                                                                                                                      </ListItemText>
                                                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                                                  </ItemContent>
                                                                                                                                                </inject-ItemContent-with-app>
                                                                                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-972" childFactory={[Function: childFactory]}>
                                                                                                                                                        <span className="MuiTouchRipple-root-972" />
                                                                                                                                                      </TransitionGroup>
                                                                                                                                                    </TouchRipple>
                                                                                                                                                  </WithStyles(TouchRipple)>
                                                                                                                                                </NoSsr>
                                                                                                                                              </li>
                                                                                                                                            </ButtonBase>
                                                                                                                                          </WithStyles(ButtonBase)>
                                                                                                                                        </MergeListContext>
                                                                                                                                      </ListItem>
                                                                                                                                    </WithStyles(ListItem)>
                                                                                                                                  </MenuItem>
                                                                                                                                </WithStyles(MenuItem)>
                                                                                                                              </a>
                                                                                                                            </Link>
                                                                                                                          </inject-Link>
                                                                                                                        </WithStyles(inject-Link)>
                                                                                                                      </Leaf>
                                                                                                                    </inject-Leaf-with-app>
                                                                                                                  </Item>
                                                                                                                </inject-Item-with-app>
                                                                                                              </div>
                                                                                                            </List>
                                                                                                          </WithStyles(List)>
                                                                                                        </MenuList>
                                                                                                      </div>
                                                                                                    </div>
                                                                                                  </div>
                                                                                                </Transition>
                                                                                              </Collapse>
                                                                                            </WithStyles(Collapse)>
                                                                                          </Branch>
                                                                                        </inject-Branch-with-app>
                                                                                      </Item>
                                                                                    </inject-Item-with-app>
                                                                                  </div>
                                                                                </List>
                                                                              </WithStyles(List)>
                                                                            </MenuList>
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </WithStyles(Collapse)>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                        <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Leaf-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                              <Leaf expandFirstItem={false} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-878" server={false} state={{...}} onClick={[Function]}>
                                                                  <inject-Link to="/leaf" className="RSFMenu-link-878" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                    <Link to="/leaf" className="RSFMenu-link-878" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                      <a data-moov-link="on" className="RSFLink-root-900 RSFMenu-link-878" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                        <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                          <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-leaf-882 MuiMenuItem-gutters-935" divider={true}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-leaf-882 MuiMenuItem-gutters-935" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-leaf-882 MuiMenuItem-gutters-935" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-939">
                                                                                    <ButtonBase className="MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-leaf-882 MuiMenuItem-gutters-935" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-939" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-949 MuiListItem-root-937 MuiListItem-default-940 MuiListItem-gutters-945 MuiListItem-divider-944 MuiListItem-button-946 MuiMenuItem-root-934 RSFMenu-listItem-877 RSFMenu-leaf-882 MuiMenuItem-gutters-935" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                        <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                          <ItemContent expandFirstItem={false} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                            <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                                              <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                                <div className="MuiListItemText-root-952">
                                                                                                  Leaf
                                                                                                </div>
                                                                                              </ListItemText>
                                                                                            </WithStyles(ListItemText)>
                                                                                          </ItemContent>
                                                                                        </inject-ItemContent-with-app>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-972" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-972" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                      </a>
                                                                    </Link>
                                                                  </inject-Link>
                                                                </WithStyles(inject-Link)>
                                                              </Leaf>
                                                            </inject-Leaf-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </MenuList>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-900" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-900" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-900" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-900" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should call a custom itemRenderer 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: renderer]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: renderer]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-1002 MuiDrawer-modal-1013 RSFMenu-modal-1001" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-1002 MuiDrawer-modal-1013 RSFMenu-modal-1001" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-1014 MuiDrawer-root-1002 MuiDrawer-modal-1013 RSFMenu-modal-1001 MuiModal-hidden-1015">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-1017" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-1004 RSFMenu-drawer-979 MuiDrawer-paperAnchorLeft-1005" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-1004 RSFMenu-drawer-979 MuiDrawer-paperAnchorLeft-1005" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-1019 MuiPaper-elevation16-1037 MuiDrawer-paper-1004 RSFMenu-drawer-979 MuiDrawer-paperAnchorLeft-1005" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: renderer]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: renderer]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <MenuList classes={{...}}>
                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-1046 MuiList-padding-1047 RSFMenu-list-980" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                        <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: renderer]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: renderer]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                              <Branch expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                <div amp-bind="class=>sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                      <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-expander-997 MuiMenuItem-gutters-1051 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                        <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-expander-997 MuiMenuItem-gutters-1051 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-expander-997 MuiMenuItem-gutters-1051 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-1055">
                                                                              <ButtonBase className="MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-expander-997 MuiMenuItem-gutters-1051 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-1055" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                <li className="MuiButtonBase-root-1065 MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-expander-997 MuiMenuItem-gutters-1051 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                                    <ItemContent expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                      <div>
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1072" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-1072" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </li>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </MenuItem>
                                                                  </WithStyles(MenuItem)>
                                                                </div>
                                                                <WithStyles(Collapse) in={false} timeout="auto">
                                                                  <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                    <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                      <div className="MuiCollapse-container-1068" style={{...}}>
                                                                        <div className="MuiCollapse-wrapper-1070">
                                                                          <div className="MuiCollapse-wrapperInner-1071">
                                                                            <MenuList component="div" classes={{...}}>
                                                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                  <div className="MuiList-root-1046 RSFMenu-list-980 MuiList-padding-1047" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                    <inject-Item-with-app expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                      <Item expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                        <inject-Branch-with-app expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                          <Branch expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                            <div amp-bind="class=>sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                              <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                                <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                  <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-expander-997 MuiMenuItem-gutters-1051 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                                                    <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-expander-997 MuiMenuItem-gutters-1051 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                      <MergeListContext dense={false} alignItems="center">
                                                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-expander-997 MuiMenuItem-gutters-1051 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-1055">
                                                                                                          <ButtonBase className="MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-expander-997 MuiMenuItem-gutters-1051 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-1055" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                            <li className="MuiButtonBase-root-1065 MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-expander-997 MuiMenuItem-gutters-1051 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                                <ItemContent expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <div>
                                                                                                                    Item 1
                                                                                                                  </div>
                                                                                                                </ItemContent>
                                                                                                              </inject-ItemContent-with-app>
                                                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1072" childFactory={[Function: childFactory]}>
                                                                                                                      <span className="MuiTouchRipple-root-1072" />
                                                                                                                    </TransitionGroup>
                                                                                                                  </TouchRipple>
                                                                                                                </WithStyles(TouchRipple)>
                                                                                                              </NoSsr>
                                                                                                            </li>
                                                                                                          </ButtonBase>
                                                                                                        </WithStyles(ButtonBase)>
                                                                                                      </MergeListContext>
                                                                                                    </ListItem>
                                                                                                  </WithStyles(ListItem)>
                                                                                                </MenuItem>
                                                                                              </WithStyles(MenuItem)>
                                                                                            </div>
                                                                                            <WithStyles(Collapse) in={false} timeout="auto">
                                                                                              <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                                <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                                  <div className="MuiCollapse-container-1068" style={{...}}>
                                                                                                    <div className="MuiCollapse-wrapper-1070">
                                                                                                      <div className="MuiCollapse-wrapperInner-1071">
                                                                                                        <MenuList component="div" classes={{...}}>
                                                                                                          <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                                            <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                              <div className="MuiList-root-1046 RSFMenu-list-980 MuiList-padding-1047" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                                                <inject-Item-with-app expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                  <Item expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                    <inject-Leaf-with-app expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                      <Leaf expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                        <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-994" server={false} state={{...}} onClick={[Function]}>
                                                                                                                          <inject-Link to="/item1/child1" className="RSFMenu-link-994" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                            <Link to="/item1/child1" className="RSFMenu-link-994" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                              <a data-moov-link="on" className="RSFLink-root-1016 RSFMenu-link-994" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                                <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                                  <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-leaf-998 MuiMenuItem-gutters-1051" divider={true}>
                                                                                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-leaf-998 MuiMenuItem-gutters-1051" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                                                        <MergeListContext dense={false} alignItems="center">
                                                                                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-leaf-998 MuiMenuItem-gutters-1051" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-1055">
                                                                                                                                            <ButtonBase className="MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-leaf-998 MuiMenuItem-gutters-1051" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-1055" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                                              <li className="MuiButtonBase-root-1065 MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-leaf-998 MuiMenuItem-gutters-1051" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                                                <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[Function: renderer]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                                  <ItemContent expandFirstItem={false} itemRenderer={[Function: renderer]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                                    <div>
                                                                                                                                                      Child 1
                                                                                                                                                    </div>
                                                                                                                                                  </ItemContent>
                                                                                                                                                </inject-ItemContent-with-app>
                                                                                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1072" childFactory={[Function: childFactory]}>
                                                                                                                                                        <span className="MuiTouchRipple-root-1072" />
                                                                                                                                                      </TransitionGroup>
                                                                                                                                                    </TouchRipple>
                                                                                                                                                  </WithStyles(TouchRipple)>
                                                                                                                                                </NoSsr>
                                                                                                                                              </li>
                                                                                                                                            </ButtonBase>
                                                                                                                                          </WithStyles(ButtonBase)>
                                                                                                                                        </MergeListContext>
                                                                                                                                      </ListItem>
                                                                                                                                    </WithStyles(ListItem)>
                                                                                                                                  </MenuItem>
                                                                                                                                </WithStyles(MenuItem)>
                                                                                                                              </a>
                                                                                                                            </Link>
                                                                                                                          </inject-Link>
                                                                                                                        </WithStyles(inject-Link)>
                                                                                                                      </Leaf>
                                                                                                                    </inject-Leaf-with-app>
                                                                                                                  </Item>
                                                                                                                </inject-Item-with-app>
                                                                                                              </div>
                                                                                                            </List>
                                                                                                          </WithStyles(List)>
                                                                                                        </MenuList>
                                                                                                      </div>
                                                                                                    </div>
                                                                                                  </div>
                                                                                                </Transition>
                                                                                              </Collapse>
                                                                                            </WithStyles(Collapse)>
                                                                                          </Branch>
                                                                                        </inject-Branch-with-app>
                                                                                      </Item>
                                                                                    </inject-Item-with-app>
                                                                                  </div>
                                                                                </List>
                                                                              </WithStyles(List)>
                                                                            </MenuList>
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </WithStyles(Collapse)>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                        <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: renderer]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: renderer]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Leaf-with-app expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                              <Leaf expandFirstItem={false} itemRenderer={[Function: renderer]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-994" server={false} state={{...}} onClick={[Function]}>
                                                                  <inject-Link to="/leaf" className="RSFMenu-link-994" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                    <Link to="/leaf" className="RSFMenu-link-994" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                      <a data-moov-link="on" className="RSFLink-root-1016 RSFMenu-link-994" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                        <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                          <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-leaf-998 MuiMenuItem-gutters-1051" divider={true}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-leaf-998 MuiMenuItem-gutters-1051" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-leaf-998 MuiMenuItem-gutters-1051" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-1055">
                                                                                    <ButtonBase className="MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-leaf-998 MuiMenuItem-gutters-1051" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-1055" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-1065 MuiListItem-root-1053 MuiListItem-default-1056 MuiListItem-gutters-1061 MuiListItem-divider-1060 MuiListItem-button-1062 MuiMenuItem-root-1050 RSFMenu-listItem-993 RSFMenu-leaf-998 MuiMenuItem-gutters-1051" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                        <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[Function: renderer]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                          <ItemContent expandFirstItem={false} itemRenderer={[Function: renderer]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                            <div>
                                                                                              Leaf
                                                                                            </div>
                                                                                          </ItemContent>
                                                                                        </inject-ItemContent-with-app>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1072" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-1072" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                      </a>
                                                                    </Link>
                                                                  </inject-Link>
                                                                </WithStyles(inject-Link)>
                                                              </Leaf>
                                                            </inject-Leaf-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </MenuList>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-1016" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-1016" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-1016" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/leaf">
                          <inject-Link to="/leaf" classes={{...}}>
                            <Link to="/leaf" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-1016" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                Leaf
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app))>
        <WithStyles(inject-Menu-with-app) theme={{...}}>
          <inject-Menu-with-app theme={{...}} classes={{...}}>
            <Menu theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-140 MuiDrawer-modal-151 RSFMenu-modal-139" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-140 MuiDrawer-modal-151 RSFMenu-modal-139" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-152 MuiDrawer-root-140 MuiDrawer-modal-151 RSFMenu-modal-139 MuiModal-hidden-153">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-155" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-142 RSFMenu-drawer-117 MuiDrawer-paperAnchorLeft-143" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-142 RSFMenu-drawer-117 MuiDrawer-paperAnchorLeft-143" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-157 MuiPaper-elevation16-175 MuiDrawer-paper-142 RSFMenu-drawer-117 MuiDrawer-paperAnchorLeft-143" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-hbox-128" style={{...}}>
                                                  <MenuList style={{...}} classes={{...}}>
                                                    <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                      <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                        <ul className="MuiList-root-184 RSFMenu-list-118 MuiList-padding-185" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                          <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <Item drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <inject-Branch-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                                <Branch expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                  <div amp-bind="class=>sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                    <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                      <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-188 RSFMenu-listItem-131 MuiMenuItem-gutters-189 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-188 RSFMenu-listItem-131 MuiMenuItem-gutters-189 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                            <MergeListContext dense={false} alignItems="center">
                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-191 MuiListItem-default-194 MuiListItem-gutters-199 MuiListItem-divider-198 MuiListItem-button-200 MuiMenuItem-root-188 RSFMenu-listItem-131 MuiMenuItem-gutters-189 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-193">
                                                                                <ButtonBase className="MuiListItem-root-191 MuiListItem-default-194 MuiListItem-gutters-199 MuiListItem-divider-198 MuiListItem-button-200 MuiMenuItem-root-188 RSFMenu-listItem-131 MuiMenuItem-gutters-189 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-193" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                  <li className="MuiButtonBase-root-203 MuiListItem-root-191 MuiListItem-default-194 MuiListItem-gutters-199 MuiListItem-divider-198 MuiListItem-button-200 MuiMenuItem-root-188 RSFMenu-listItem-131 MuiMenuItem-gutters-189 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                    <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                      <ItemContent expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                        <WithStyles(ListItemText) className="RSFMenu-listItem-131" primary="Group 1" disableTypography={true}>
                                                                                          <ListItemText className="RSFMenu-listItem-131" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-206 RSFMenu-listItem-131">
                                                                                              Group 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-134">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-134" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-212 RSFMenu-listItemIcon-134">
                                                                                              <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                                <ExpanderIcon expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                                  <pure(ChevronRightIcon) className="RSFMenu-icon-126">
                                                                                                    <ChevronRightIcon className="RSFMenu-icon-126">
                                                                                                      <WithStyles(SvgIcon) className="RSFMenu-icon-126">
                                                                                                        <SvgIcon className="RSFMenu-icon-126" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                          <svg className="MuiSvgIcon-root-213 RSFMenu-icon-126" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                            <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                            <path fill="none" d="M0 0h24v24H0z" />
                                                                                                          </svg>
                                                                                                        </SvgIcon>
                                                                                                      </WithStyles(SvgIcon)>
                                                                                                    </ChevronRightIcon>
                                                                                                  </pure(ChevronRightIcon)>
                                                                                                </ExpanderIcon>
                                                                                              </inject-ExpanderIcon-with-app>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                      </ItemContent>
                                                                                    </inject-ItemContent-with-app>
                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-222" childFactory={[Function: childFactory]}>
                                                                                            <span className="MuiTouchRipple-root-222" />
                                                                                          </TransitionGroup>
                                                                                        </TouchRipple>
                                                                                      </WithStyles(TouchRipple)>
                                                                                    </NoSsr>
                                                                                  </li>
                                                                                </ButtonBase>
                                                                              </WithStyles(ButtonBase)>
                                                                            </MergeListContext>
                                                                          </ListItem>
                                                                        </WithStyles(ListItem)>
                                                                      </MenuItem>
                                                                    </WithStyles(MenuItem)>
                                                                  </div>
                                                                </Branch>
                                                              </inject-Branch-with-app>
                                                            </Item>
                                                          </inject-Item-with-app>
                                                        </ul>
                                                      </List>
                                                    </WithStyles(List)>
                                                  </MenuList>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-154" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-154" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-154" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-252 MuiDrawer-modal-263 RSFMenu-modal-251" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-252 MuiDrawer-modal-263 RSFMenu-modal-251" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-264 MuiDrawer-root-252 MuiDrawer-modal-263 RSFMenu-modal-251 MuiModal-hidden-265">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-267" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-254 RSFMenu-drawer-229 MuiDrawer-paperAnchorLeft-255" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-254 RSFMenu-drawer-229 MuiDrawer-paperAnchorLeft-255" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-269 MuiPaper-elevation16-287 MuiDrawer-paper-254 RSFMenu-drawer-229 MuiDrawer-paperAnchorLeft-255" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-hbox-240" style={{...}}>
                                                  <MenuList style={{...}} classes={{...}}>
                                                    <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                      <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                        <ul className="MuiList-root-296 RSFMenu-list-230 MuiList-padding-297" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                          <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <inject-Branch-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                                <Branch expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                  <div amp-bind="class=>sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                    <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                      <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-300 RSFMenu-listItem-243 MuiMenuItem-gutters-301 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-300 RSFMenu-listItem-243 MuiMenuItem-gutters-301 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                            <MergeListContext dense={false} alignItems="center">
                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-303 MuiListItem-default-306 MuiListItem-gutters-311 MuiListItem-divider-310 MuiListItem-button-312 MuiMenuItem-root-300 RSFMenu-listItem-243 MuiMenuItem-gutters-301 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-305">
                                                                                <ButtonBase className="MuiListItem-root-303 MuiListItem-default-306 MuiListItem-gutters-311 MuiListItem-divider-310 MuiListItem-button-312 MuiMenuItem-root-300 RSFMenu-listItem-243 MuiMenuItem-gutters-301 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-305" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                  <li className="MuiButtonBase-root-315 MuiListItem-root-303 MuiListItem-default-306 MuiListItem-gutters-311 MuiListItem-divider-310 MuiListItem-button-312 MuiMenuItem-root-300 RSFMenu-listItem-243 MuiMenuItem-gutters-301 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                    <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                      <ItemContent expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                        <WithStyles(ListItemText) className="RSFMenu-listItem-243" primary="Group 1" disableTypography={true}>
                                                                                          <ListItemText className="RSFMenu-listItem-243" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-318 RSFMenu-listItem-243">
                                                                                              Group 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-246">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-246" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-324 RSFMenu-listItemIcon-246">
                                                                                              <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                                <ExpanderIcon expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                                  <pure(ChevronRightIcon) className="RSFMenu-icon-238">
                                                                                                    <ChevronRightIcon className="RSFMenu-icon-238">
                                                                                                      <WithStyles(SvgIcon) className="RSFMenu-icon-238">
                                                                                                        <SvgIcon className="RSFMenu-icon-238" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                          <svg className="MuiSvgIcon-root-325 RSFMenu-icon-238" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                            <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                            <path fill="none" d="M0 0h24v24H0z" />
                                                                                                          </svg>
                                                                                                        </SvgIcon>
                                                                                                      </WithStyles(SvgIcon)>
                                                                                                    </ChevronRightIcon>
                                                                                                  </pure(ChevronRightIcon)>
                                                                                                </ExpanderIcon>
                                                                                              </inject-ExpanderIcon-with-app>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                      </ItemContent>
                                                                                    </inject-ItemContent-with-app>
                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-334" childFactory={[Function: childFactory]}>
                                                                                            <span className="MuiTouchRipple-root-334" />
                                                                                          </TransitionGroup>
                                                                                        </TouchRipple>
                                                                                      </WithStyles(TouchRipple)>
                                                                                    </NoSsr>
                                                                                  </li>
                                                                                </ButtonBase>
                                                                              </WithStyles(ButtonBase)>
                                                                            </MergeListContext>
                                                                          </ListItem>
                                                                        </WithStyles(ListItem)>
                                                                      </MenuItem>
                                                                    </WithStyles(MenuItem)>
                                                                  </div>
                                                                </Branch>
                                                              </inject-Branch-with-app>
                                                            </Item>
                                                          </inject-Item-with-app>
                                                        </ul>
                                                      </List>
                                                    </WithStyles(List)>
                                                  </MenuList>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-266" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-266" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-266" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in simple mode 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-24 MuiDrawer-modal-35 RSFMenu-modal-23" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-24 MuiDrawer-modal-35 RSFMenu-modal-23" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-36 MuiDrawer-root-24 MuiDrawer-modal-35 RSFMenu-modal-23 MuiModal-hidden-37">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-39" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-26 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-27" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-26 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-27" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-41 MuiPaper-elevation16-59 MuiDrawer-paper-26 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-27" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <MenuList classes={{...}}>
                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-68 MuiList-padding-69 RSFMenu-list-2" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                        <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                              <Branch expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                <div amp-bind="class=>sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                      <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiMenuItem-gutters-73 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                        <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiMenuItem-gutters-73 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-75 MuiListItem-default-78 MuiListItem-gutters-83 MuiListItem-divider-82 MuiListItem-button-84 MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiMenuItem-gutters-73 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-77">
                                                                              <ButtonBase className="MuiListItem-root-75 MuiListItem-default-78 MuiListItem-gutters-83 MuiListItem-divider-82 MuiListItem-button-84 MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiMenuItem-gutters-73 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-77" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                <li className="MuiButtonBase-root-87 MuiListItem-root-75 MuiListItem-default-78 MuiListItem-gutters-83 MuiListItem-divider-82 MuiListItem-button-84 MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiMenuItem-gutters-73 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                                    <ItemContent expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                      <WithStyles(ListItemText) className="RSFMenu-listItem-15" primary="Group 1" disableTypography={true}>
                                                                                        <ListItemText className="RSFMenu-listItem-15" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-90 RSFMenu-listItem-15">
                                                                                            Group 1
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-18">
                                                                                        <ListItemIcon className="RSFMenu-listItemIcon-18" classes={{...}}>
                                                                                          <div className="MuiListItemIcon-root-96 RSFMenu-listItemIcon-18">
                                                                                            <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                              <ExpanderIcon expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                                <pure(ExpandMoreIcon) className="RSFMenu-icon-10">
                                                                                                  <ExpandMoreIcon className="RSFMenu-icon-10">
                                                                                                    <WithStyles(SvgIcon) className="RSFMenu-icon-10">
                                                                                                      <SvgIcon className="RSFMenu-icon-10" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                        <svg className="MuiSvgIcon-root-97 RSFMenu-icon-10" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                          <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                          <path fill="none" d="M0 0h24v24H0z" />
                                                                                                        </svg>
                                                                                                      </SvgIcon>
                                                                                                    </WithStyles(SvgIcon)>
                                                                                                  </ExpandMoreIcon>
                                                                                                </pure(ExpandMoreIcon)>
                                                                                              </ExpanderIcon>
                                                                                            </inject-ExpanderIcon-with-app>
                                                                                          </div>
                                                                                        </ListItemIcon>
                                                                                      </WithStyles(ListItemIcon)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-110" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-110" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </li>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </MenuItem>
                                                                  </WithStyles(MenuItem)>
                                                                </div>
                                                                <WithStyles(Collapse) in={false} timeout="auto">
                                                                  <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                    <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                      <div className="MuiCollapse-container-106" style={{...}}>
                                                                        <div className="MuiCollapse-wrapper-108">
                                                                          <div className="MuiCollapse-wrapperInner-109">
                                                                            <MenuList component="div" classes={{...}}>
                                                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                  <div className="MuiList-root-68 RSFMenu-list-2 MuiList-padding-69" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                    <inject-Item-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                      <Item expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                        <inject-Branch-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                          <Branch expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                            <div amp-bind="class=>sublist == \\'2.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                                              <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                                <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                  <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiMenuItem-gutters-73 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                                                    <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiMenuItem-gutters-73 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                      <MergeListContext dense={false} alignItems="center">
                                                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-75 MuiListItem-default-78 MuiListItem-gutters-83 MuiListItem-divider-82 MuiListItem-button-84 MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiMenuItem-gutters-73 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-77">
                                                                                                          <ButtonBase className="MuiListItem-root-75 MuiListItem-default-78 MuiListItem-gutters-83 MuiListItem-divider-82 MuiListItem-button-84 MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiMenuItem-gutters-73 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-77" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                            <li className="MuiButtonBase-root-87 MuiListItem-root-75 MuiListItem-default-78 MuiListItem-gutters-83 MuiListItem-divider-82 MuiListItem-button-84 MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiMenuItem-gutters-73 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                                <ItemContent expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-15" primary="Item 1" disableTypography={true}>
                                                                                                                    <ListItemText className="RSFMenu-listItem-15" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                      <div className="MuiListItemText-root-90 RSFMenu-listItem-15">
                                                                                                                        Item 1
                                                                                                                      </div>
                                                                                                                    </ListItemText>
                                                                                                                  </WithStyles(ListItemText)>
                                                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-18">
                                                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-18" classes={{...}}>
                                                                                                                      <div className="MuiListItemIcon-root-96 RSFMenu-listItemIcon-18">
                                                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                          <ExpanderIcon expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                            <pure(ExpandMoreIcon) className="RSFMenu-icon-10">
                                                                                                                              <ExpandMoreIcon className="RSFMenu-icon-10">
                                                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-10">
                                                                                                                                  <SvgIcon className="RSFMenu-icon-10" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                                    <svg className="MuiSvgIcon-root-97 RSFMenu-icon-10" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                                      <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                                    </svg>
                                                                                                                                  </SvgIcon>
                                                                                                                                </WithStyles(SvgIcon)>
                                                                                                                              </ExpandMoreIcon>
                                                                                                                            </pure(ExpandMoreIcon)>
                                                                                                                          </ExpanderIcon>
                                                                                                                        </inject-ExpanderIcon-with-app>
                                                                                                                      </div>
                                                                                                                    </ListItemIcon>
                                                                                                                  </WithStyles(ListItemIcon)>
                                                                                                                </ItemContent>
                                                                                                              </inject-ItemContent-with-app>
                                                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-110" childFactory={[Function: childFactory]}>
                                                                                                                      <span className="MuiTouchRipple-root-110" />
                                                                                                                    </TransitionGroup>
                                                                                                                  </TouchRipple>
                                                                                                                </WithStyles(TouchRipple)>
                                                                                                              </NoSsr>
                                                                                                            </li>
                                                                                                          </ButtonBase>
                                                                                                        </WithStyles(ButtonBase)>
                                                                                                      </MergeListContext>
                                                                                                    </ListItem>
                                                                                                  </WithStyles(ListItem)>
                                                                                                </MenuItem>
                                                                                              </WithStyles(MenuItem)>
                                                                                            </div>
                                                                                            <WithStyles(Collapse) in={false} timeout="auto">
                                                                                              <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                                <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                                  <div className="MuiCollapse-container-106" style={{...}}>
                                                                                                    <div className="MuiCollapse-wrapper-108">
                                                                                                      <div className="MuiCollapse-wrapperInner-109">
                                                                                                        <MenuList component="div" classes={{...}}>
                                                                                                          <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                                            <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                              <div className="MuiList-root-68 RSFMenu-list-2 MuiList-padding-69" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                                                <inject-Item-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                  <Item expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                    <inject-Leaf-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                      <Leaf expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                        <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]}>
                                                                                                                          <inject-Link to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                            <Link to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                              <a data-moov-link="on" className="RSFLink-root-38 RSFMenu-link-16" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                                <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                                  <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiMenuItem-gutters-73" divider={true}>
                                                                                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiMenuItem-gutters-73" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                                                        <MergeListContext dense={false} alignItems="center">
                                                                                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-75 MuiListItem-default-78 MuiListItem-gutters-83 MuiListItem-divider-82 MuiListItem-button-84 MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiMenuItem-gutters-73" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-77">
                                                                                                                                            <ButtonBase className="MuiListItem-root-75 MuiListItem-default-78 MuiListItem-gutters-83 MuiListItem-divider-82 MuiListItem-button-84 MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiMenuItem-gutters-73" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-77" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                                              <li className="MuiButtonBase-root-87 MuiListItem-root-75 MuiListItem-default-78 MuiListItem-gutters-83 MuiListItem-divider-82 MuiListItem-button-84 MuiMenuItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiMenuItem-gutters-73" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                                                <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                                  <ItemContent expandFirstItem={false} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                                        <div className="MuiListItemText-root-90">
                                                                                                                                                          Child 1
                                                                                                                                                        </div>
                                                                                                                                                      </ListItemText>
                                                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                                                  </ItemContent>
                                                                                                                                                </inject-ItemContent-with-app>
                                                                                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-110" childFactory={[Function: childFactory]}>
                                                                                                                                                        <span className="MuiTouchRipple-root-110" />
                                                                                                                                                      </TransitionGroup>
                                                                                                                                                    </TouchRipple>
                                                                                                                                                  </WithStyles(TouchRipple)>
                                                                                                                                                </NoSsr>
                                                                                                                                              </li>
                                                                                                                                            </ButtonBase>
                                                                                                                                          </WithStyles(ButtonBase)>
                                                                                                                                        </MergeListContext>
                                                                                                                                      </ListItem>
                                                                                                                                    </WithStyles(ListItem)>
                                                                                                                                  </MenuItem>
                                                                                                                                </WithStyles(MenuItem)>
                                                                                                                              </a>
                                                                                                                            </Link>
                                                                                                                          </inject-Link>
                                                                                                                        </WithStyles(inject-Link)>
                                                                                                                      </Leaf>
                                                                                                                    </inject-Leaf-with-app>
                                                                                                                  </Item>
                                                                                                                </inject-Item-with-app>
                                                                                                              </div>
                                                                                                            </List>
                                                                                                          </WithStyles(List)>
                                                                                                        </MenuList>
                                                                                                      </div>
                                                                                                    </div>
                                                                                                  </div>
                                                                                                </Transition>
                                                                                              </Collapse>
                                                                                            </WithStyles(Collapse)>
                                                                                          </Branch>
                                                                                        </inject-Branch-with-app>
                                                                                      </Item>
                                                                                    </inject-Item-with-app>
                                                                                  </div>
                                                                                </List>
                                                                              </WithStyles(List)>
                                                                            </MenuList>
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </WithStyles(Collapse)>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </MenuList>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-38" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-38" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-38" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render without expand first not root item by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-623 MuiDrawer-modal-634 RSFMenu-modal-622" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-623 MuiDrawer-modal-634 RSFMenu-modal-622" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-635 MuiDrawer-root-623 MuiDrawer-modal-634 RSFMenu-modal-622 MuiModal-hidden-636">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-638" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-625 RSFMenu-drawer-600 MuiDrawer-paperAnchorLeft-626" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-625 RSFMenu-drawer-600 MuiDrawer-paperAnchorLeft-626" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-640 MuiPaper-elevation16-658 MuiDrawer-paper-625 RSFMenu-drawer-600 MuiDrawer-paperAnchorLeft-626" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-hbox-611" style={{...}}>
                                                  <MenuList style={{...}} classes={{...}}>
                                                    <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                      <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                        <ul className="MuiList-root-667 RSFMenu-list-601 MuiList-padding-668" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                          <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <inject-Branch-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                                <Branch expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                  <div amp-bind="class=>sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                    <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                      <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-671 RSFMenu-listItem-614 MuiMenuItem-gutters-672 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-671 RSFMenu-listItem-614 MuiMenuItem-gutters-672 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                            <MergeListContext dense={false} alignItems="center">
                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-674 MuiListItem-default-677 MuiListItem-gutters-682 MuiListItem-divider-681 MuiListItem-button-683 MuiMenuItem-root-671 RSFMenu-listItem-614 MuiMenuItem-gutters-672 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-676">
                                                                                <ButtonBase className="MuiListItem-root-674 MuiListItem-default-677 MuiListItem-gutters-682 MuiListItem-divider-681 MuiListItem-button-683 MuiMenuItem-root-671 RSFMenu-listItem-614 MuiMenuItem-gutters-672 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-676" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                  <li className="MuiButtonBase-root-686 MuiListItem-root-674 MuiListItem-default-677 MuiListItem-gutters-682 MuiListItem-divider-681 MuiListItem-button-683 MuiMenuItem-root-671 RSFMenu-listItem-614 MuiMenuItem-gutters-672 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                    <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                      <ItemContent expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                        <WithStyles(ListItemText) className="RSFMenu-listItem-614" primary="Group 1" disableTypography={true}>
                                                                                          <ListItemText className="RSFMenu-listItem-614" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-689 RSFMenu-listItem-614">
                                                                                              Group 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-617">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-617" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-695 RSFMenu-listItemIcon-617">
                                                                                              <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                                <ExpanderIcon expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                                  <pure(ChevronRightIcon) className="RSFMenu-icon-609">
                                                                                                    <ChevronRightIcon className="RSFMenu-icon-609">
                                                                                                      <WithStyles(SvgIcon) className="RSFMenu-icon-609">
                                                                                                        <SvgIcon className="RSFMenu-icon-609" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                          <svg className="MuiSvgIcon-root-696 RSFMenu-icon-609" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                            <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                            <path fill="none" d="M0 0h24v24H0z" />
                                                                                                          </svg>
                                                                                                        </SvgIcon>
                                                                                                      </WithStyles(SvgIcon)>
                                                                                                    </ChevronRightIcon>
                                                                                                  </pure(ChevronRightIcon)>
                                                                                                </ExpanderIcon>
                                                                                              </inject-ExpanderIcon-with-app>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                      </ItemContent>
                                                                                    </inject-ItemContent-with-app>
                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-705" childFactory={[Function: childFactory]}>
                                                                                            <span className="MuiTouchRipple-root-705" />
                                                                                          </TransitionGroup>
                                                                                        </TouchRipple>
                                                                                      </WithStyles(TouchRipple)>
                                                                                    </NoSsr>
                                                                                  </li>
                                                                                </ButtonBase>
                                                                              </WithStyles(ButtonBase)>
                                                                            </MergeListContext>
                                                                          </ListItem>
                                                                        </WithStyles(ListItem)>
                                                                      </MenuItem>
                                                                    </WithStyles(MenuItem)>
                                                                  </div>
                                                                </Branch>
                                                              </inject-Branch-with-app>
                                                            </Item>
                                                          </inject-Item-with-app>
                                                        </ul>
                                                      </List>
                                                    </WithStyles(List)>
                                                  </MenuList>
                                                  <MenuList style={{...}} classes={{...}}>
                                                    <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                      <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                        <ul className="MuiList-root-667 RSFMenu-list-601 MuiList-padding-668" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                          <WithStyles(MenuItem) divider={true} button={true} onClick={[Function]} tabIndex={-1} onFocus={[Function]}>
                                                            <MenuItem divider={true} button={true} onClick={[Function]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                              <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-671 MuiMenuItem-gutters-672" divider={true} onClick={[Function]} onFocus={[Function]}>
                                                                <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-671 MuiMenuItem-gutters-672" divider={true} onClick={[Function]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                  <MergeListContext dense={false} alignItems="center">
                                                                    <WithStyles(ButtonBase) className="MuiListItem-root-674 MuiListItem-default-677 MuiListItem-gutters-682 MuiListItem-divider-681 MuiListItem-button-683 MuiMenuItem-root-671 MuiMenuItem-gutters-672" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-676">
                                                                      <ButtonBase className="MuiListItem-root-674 MuiListItem-default-677 MuiListItem-gutters-682 MuiListItem-divider-681 MuiListItem-button-683 MuiMenuItem-root-671 MuiMenuItem-gutters-672" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-676" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                        <li className="MuiButtonBase-root-686 MuiListItem-root-674 MuiListItem-default-677 MuiListItem-gutters-682 MuiListItem-divider-681 MuiListItem-button-683 MuiMenuItem-root-671 MuiMenuItem-gutters-672" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function]}>
                                                                          <WithStyles(ListItemIcon) classes={{...}}>
                                                                            <ListItemIcon classes={{...}}>
                                                                              <div className="MuiListItemIcon-root-695 RSFMenu-header-608">
                                                                                <pure(ChevronLeftIcon) className="RSFMenu-icon-609">
                                                                                  <ChevronLeftIcon className="RSFMenu-icon-609">
                                                                                    <WithStyles(SvgIcon) className="RSFMenu-icon-609">
                                                                                      <SvgIcon className="RSFMenu-icon-609" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                        <svg className="MuiSvgIcon-root-696 RSFMenu-icon-609" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                          <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
                                                                                          <path fill="none" d="M0 0h24v24H0z" />
                                                                                        </svg>
                                                                                      </SvgIcon>
                                                                                    </WithStyles(SvgIcon)>
                                                                                  </ChevronLeftIcon>
                                                                                </pure(ChevronLeftIcon)>
                                                                              </div>
                                                                            </ListItemIcon>
                                                                          </WithStyles(ListItemIcon)>
                                                                          <WithStyles(ListItemText) classes={{...}} primary={{...}}>
                                                                            <ListItemText primary={{...}} classes={{...}} disableTypography={false} inset={false}>
                                                                              <div className="MuiListItemText-root-689 RSFMenu-headerText-610">
                                                                                <WithStyles(Typography) variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-692" component="span">
                                                                                  <Typography variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-692" component="span" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                                                    <span className="MuiTypography-root-712 MuiTypography-subtitle1-730 MuiListItemText-primary-692">
                                                                                      <div className="RSFMenu-headerText-610">
                                                                                        Group 1
                                                                                         
                                                                                      </div>
                                                                                    </span>
                                                                                  </Typography>
                                                                                </WithStyles(Typography)>
                                                                              </div>
                                                                            </ListItemText>
                                                                          </WithStyles(ListItemText)>
                                                                          <NoSsr defer={false} fallback={{...}}>
                                                                            <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                              <TouchRipple center={false} classes={{...}}>
                                                                                <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-705" childFactory={[Function: childFactory]}>
                                                                                  <span className="MuiTouchRipple-root-705" />
                                                                                </TransitionGroup>
                                                                              </TouchRipple>
                                                                            </WithStyles(TouchRipple)>
                                                                          </NoSsr>
                                                                        </li>
                                                                      </ButtonBase>
                                                                    </WithStyles(ButtonBase)>
                                                                  </MergeListContext>
                                                                </ListItem>
                                                              </WithStyles(ListItem)>
                                                            </MenuItem>
                                                          </WithStyles(MenuItem)>
                                                          <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={1} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={1} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <inject-Branch-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={false}>
                                                                <Branch expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                  <div amp-bind="class=>sublist == \\'1.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                    <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                      <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-671 RSFMenu-listItem-614 MuiMenuItem-gutters-672 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-671 RSFMenu-listItem-614 MuiMenuItem-gutters-672 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                            <MergeListContext dense={false} alignItems="center">
                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-674 MuiListItem-default-677 MuiListItem-gutters-682 MuiListItem-divider-681 MuiListItem-button-683 MuiMenuItem-root-671 RSFMenu-listItem-614 MuiMenuItem-gutters-672 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-676">
                                                                                <ButtonBase className="MuiListItem-root-674 MuiListItem-default-677 MuiListItem-gutters-682 MuiListItem-divider-681 MuiListItem-button-683 MuiMenuItem-root-671 RSFMenu-listItem-614 MuiMenuItem-gutters-672 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-676" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                  <li className="MuiButtonBase-root-686 MuiListItem-root-674 MuiListItem-default-677 MuiListItem-gutters-682 MuiListItem-divider-681 MuiListItem-button-683 MuiMenuItem-root-671 RSFMenu-listItem-614 MuiMenuItem-gutters-672 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                    <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined">
                                                                                      <ItemContent expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                        <WithStyles(ListItemText) className="RSFMenu-listItem-614" primary="Item 1" disableTypography={true}>
                                                                                          <ListItemText className="RSFMenu-listItem-614" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-689 RSFMenu-listItem-614">
                                                                                              Item 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-617">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-617" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-695 RSFMenu-listItemIcon-617">
                                                                                              <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                                <ExpanderIcon expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                                  <pure(ChevronRightIcon) className="RSFMenu-icon-609">
                                                                                                    <ChevronRightIcon className="RSFMenu-icon-609">
                                                                                                      <WithStyles(SvgIcon) className="RSFMenu-icon-609">
                                                                                                        <SvgIcon className="RSFMenu-icon-609" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                          <svg className="MuiSvgIcon-root-696 RSFMenu-icon-609" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                            <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                            <path fill="none" d="M0 0h24v24H0z" />
                                                                                                          </svg>
                                                                                                        </SvgIcon>
                                                                                                      </WithStyles(SvgIcon)>
                                                                                                    </ChevronRightIcon>
                                                                                                  </pure(ChevronRightIcon)>
                                                                                                </ExpanderIcon>
                                                                                              </inject-ExpanderIcon-with-app>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                      </ItemContent>
                                                                                    </inject-ItemContent-with-app>
                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-705" childFactory={[Function: childFactory]}>
                                                                                            <span className="MuiTouchRipple-root-705" />
                                                                                          </TransitionGroup>
                                                                                        </TouchRipple>
                                                                                      </WithStyles(TouchRipple)>
                                                                                    </NoSsr>
                                                                                  </li>
                                                                                </ButtonBase>
                                                                              </WithStyles(ButtonBase)>
                                                                            </MergeListContext>
                                                                          </ListItem>
                                                                        </WithStyles(ListItem)>
                                                                      </MenuItem>
                                                                    </WithStyles(MenuItem)>
                                                                  </div>
                                                                </Branch>
                                                              </inject-Branch-with-app>
                                                            </Item>
                                                          </inject-Item-with-app>
                                                        </ul>
                                                      </List>
                                                    </WithStyles(List)>
                                                  </MenuList>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-637" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-637" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-637" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should use custom icons 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-364 MuiDrawer-modal-375 RSFMenu-modal-363" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-364 MuiDrawer-modal-375 RSFMenu-modal-363" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-376 MuiDrawer-root-364 MuiDrawer-modal-375 RSFMenu-modal-363 MuiModal-hidden-377">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-379" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-366 RSFMenu-drawer-341 MuiDrawer-paperAnchorLeft-367" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-366 RSFMenu-drawer-341 MuiDrawer-paperAnchorLeft-367" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-381 MuiPaper-elevation16-399 MuiDrawer-paper-366 RSFMenu-drawer-341 MuiDrawer-paperAnchorLeft-367" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-hbox-352" style={{...}}>
                                                  <MenuList style={{...}} classes={{...}}>
                                                    <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                      <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                        <ul className="MuiList-root-408 RSFMenu-list-342 MuiList-padding-409" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                          <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <inject-Branch-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                                <Branch expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                  <div amp-bind="class=>sublist == \\'0.undefined\\' ? \\'expanded\\' : \\'\\'">
                                                                    <WithStyles(MenuItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                      <MenuItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-412 RSFMenu-listItem-355 MuiMenuItem-gutters-413 menu-item" divider={true} onClick={[Function: bound ]}>
                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-412 RSFMenu-listItem-355 MuiMenuItem-gutters-413 menu-item" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                            <MergeListContext dense={false} alignItems="center">
                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-415 MuiListItem-default-418 MuiListItem-gutters-423 MuiListItem-divider-422 MuiListItem-button-424 MuiMenuItem-root-412 RSFMenu-listItem-355 MuiMenuItem-gutters-413 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-417">
                                                                                <ButtonBase className="MuiListItem-root-415 MuiListItem-default-418 MuiListItem-gutters-423 MuiListItem-divider-422 MuiListItem-button-424 MuiMenuItem-root-412 RSFMenu-listItem-355 MuiMenuItem-gutters-413 menu-item" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-417" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                  <li className="MuiButtonBase-root-427 MuiListItem-root-415 MuiListItem-default-418 MuiListItem-gutters-423 MuiListItem-divider-422 MuiListItem-button-424 MuiMenuItem-root-412 RSFMenu-listItem-355 MuiMenuItem-gutters-413 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                    <inject-ItemContent-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                      <ItemContent expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                        <WithStyles(ListItemText) className="RSFMenu-listItem-355" primary="Group 1" disableTypography={true}>
                                                                                          <ListItemText className="RSFMenu-listItem-355" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-430 RSFMenu-listItem-355">
                                                                                              Group 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-358">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-358" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-436 RSFMenu-listItemIcon-358">
                                                                                              <inject-ExpanderIcon-with-app expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                                <ExpanderIcon expandFirstItem={false} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                                  <pure(ChevronRightIcon) className="RSFMenu-icon-350">
                                                                                                    <ChevronRightIcon className="RSFMenu-icon-350">
                                                                                                      <WithStyles(SvgIcon) className="RSFMenu-icon-350">
                                                                                                        <SvgIcon className="RSFMenu-icon-350" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                          <svg className="MuiSvgIcon-root-437 RSFMenu-icon-350" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                            <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                            <path fill="none" d="M0 0h24v24H0z" />
                                                                                                          </svg>
                                                                                                        </SvgIcon>
                                                                                                      </WithStyles(SvgIcon)>
                                                                                                    </ChevronRightIcon>
                                                                                                  </pure(ChevronRightIcon)>
                                                                                                </ExpanderIcon>
                                                                                              </inject-ExpanderIcon-with-app>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                      </ItemContent>
                                                                                    </inject-ItemContent-with-app>
                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-446" childFactory={[Function: childFactory]}>
                                                                                            <span className="MuiTouchRipple-root-446" />
                                                                                          </TransitionGroup>
                                                                                        </TouchRipple>
                                                                                      </WithStyles(TouchRipple)>
                                                                                    </NoSsr>
                                                                                  </li>
                                                                                </ButtonBase>
                                                                              </WithStyles(ButtonBase)>
                                                                            </MergeListContext>
                                                                          </ListItem>
                                                                        </WithStyles(ListItem)>
                                                                      </MenuItem>
                                                                    </WithStyles(MenuItem)>
                                                                  </div>
                                                                </Branch>
                                                              </inject-Branch-with-app>
                                                            </Item>
                                                          </inject-Item-with-app>
                                                        </ul>
                                                      </List>
                                                    </WithStyles(List)>
                                                  </MenuList>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-378" style={[undefined]} onClick={[Function]} href={{...}} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <WithStyles(inject-Link) to="/item1">
                          <inject-Link to="/item1" classes={{...}}>
                            <Link to="/item1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-378" style={[undefined]} onClick={[Function]} href="https://localhost/item1">
                                Item 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                        <WithStyles(inject-Link) to="/item1/child1">
                          <inject-Link to="/item1/child1" classes={{...}}>
                            <Link to="/item1/child1" classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                              <a data-moov-link="on" className="RSFLink-root-378" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                Child 1
                              </a>
                            </Link>
                          </inject-Link>
                        </WithStyles(inject-Link)>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
